// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace RyanPip.Astronomer
{
    public static class GetDeploymentOptions
    {
        /// <summary>
        /// Deployment options data source
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Astronomer = Pulumi.Astronomer;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Astronomer.GetDeploymentOptions.Invoke();
        /// 
        ///     var exampleWithDeploymentIdQueryParam = Astronomer.GetDeploymentOptions.Invoke(new()
        ///     {
        ///         DeploymentId = "clozc036j01to01jrlgvueo8t",
        ///     });
        /// 
        ///     var exampleWithDeploymentTypeQueryParam = Astronomer.GetDeploymentOptions.Invoke(new()
        ///     {
        ///         DeploymentType = "DEDICATED",
        ///     });
        /// 
        ///     var exampleWithExecutorQueryParam = Astronomer.GetDeploymentOptions.Invoke(new()
        ///     {
        ///         Executor = "CELERY",
        ///     });
        /// 
        ///     var exampleWithCloudProviderQueryParam = Astronomer.GetDeploymentOptions.Invoke(new()
        ///     {
        ///         CloudProvider = "AWS",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDeploymentOptionsResult> InvokeAsync(GetDeploymentOptionsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeploymentOptionsResult>("astronomer:index/getDeploymentOptions:getDeploymentOptions", args ?? new GetDeploymentOptionsArgs(), options.WithDefaults());

        /// <summary>
        /// Deployment options data source
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Astronomer = Pulumi.Astronomer;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Astronomer.GetDeploymentOptions.Invoke();
        /// 
        ///     var exampleWithDeploymentIdQueryParam = Astronomer.GetDeploymentOptions.Invoke(new()
        ///     {
        ///         DeploymentId = "clozc036j01to01jrlgvueo8t",
        ///     });
        /// 
        ///     var exampleWithDeploymentTypeQueryParam = Astronomer.GetDeploymentOptions.Invoke(new()
        ///     {
        ///         DeploymentType = "DEDICATED",
        ///     });
        /// 
        ///     var exampleWithExecutorQueryParam = Astronomer.GetDeploymentOptions.Invoke(new()
        ///     {
        ///         Executor = "CELERY",
        ///     });
        /// 
        ///     var exampleWithCloudProviderQueryParam = Astronomer.GetDeploymentOptions.Invoke(new()
        ///     {
        ///         CloudProvider = "AWS",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDeploymentOptionsResult> Invoke(GetDeploymentOptionsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeploymentOptionsResult>("astronomer:index/getDeploymentOptions:getDeploymentOptions", args ?? new GetDeploymentOptionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeploymentOptionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cloud provider
        /// </summary>
        [Input("cloudProvider")]
        public string? CloudProvider { get; set; }

        /// <summary>
        /// Deployment ID
        /// </summary>
        [Input("deploymentId")]
        public string? DeploymentId { get; set; }

        /// <summary>
        /// Deployment type
        /// </summary>
        [Input("deploymentType")]
        public string? DeploymentType { get; set; }

        /// <summary>
        /// Executor
        /// </summary>
        [Input("executor")]
        public string? Executor { get; set; }

        public GetDeploymentOptionsArgs()
        {
        }
        public static new GetDeploymentOptionsArgs Empty => new GetDeploymentOptionsArgs();
    }

    public sealed class GetDeploymentOptionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cloud provider
        /// </summary>
        [Input("cloudProvider")]
        public Input<string>? CloudProvider { get; set; }

        /// <summary>
        /// Deployment ID
        /// </summary>
        [Input("deploymentId")]
        public Input<string>? DeploymentId { get; set; }

        /// <summary>
        /// Deployment type
        /// </summary>
        [Input("deploymentType")]
        public Input<string>? DeploymentType { get; set; }

        /// <summary>
        /// Executor
        /// </summary>
        [Input("executor")]
        public Input<string>? Executor { get; set; }

        public GetDeploymentOptionsInvokeArgs()
        {
        }
        public static new GetDeploymentOptionsInvokeArgs Empty => new GetDeploymentOptionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeploymentOptionsResult
    {
        /// <summary>
        /// Cloud provider
        /// </summary>
        public readonly string? CloudProvider;
        /// <summary>
        /// Deployment ID
        /// </summary>
        public readonly string? DeploymentId;
        /// <summary>
        /// Deployment type
        /// </summary>
        public readonly string? DeploymentType;
        /// <summary>
        /// Executor
        /// </summary>
        public readonly string? Executor;
        /// <summary>
        /// Available executors
        /// </summary>
        public readonly ImmutableArray<string> Executors;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Resource quota options
        /// </summary>
        public readonly Outputs.GetDeploymentOptionsResourceQuotasResult ResourceQuotas;
        /// <summary>
        /// Available Astro Runtime versions
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeploymentOptionsRuntimeReleaseResult> RuntimeReleases;
        /// <summary>
        /// Available scheduler sizes
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeploymentOptionsSchedulerMachineResult> SchedulerMachines;
        /// <summary>
        /// Available worker machine types
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeploymentOptionsWorkerMachineResult> WorkerMachines;
        /// <summary>
        /// Available worker queue options
        /// </summary>
        public readonly Outputs.GetDeploymentOptionsWorkerQueuesResult WorkerQueues;
        /// <summary>
        /// Available workload identity options
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeploymentOptionsWorkloadIdentityOptionResult> WorkloadIdentityOptions;

        [OutputConstructor]
        private GetDeploymentOptionsResult(
            string? cloudProvider,

            string? deploymentId,

            string? deploymentType,

            string? executor,

            ImmutableArray<string> executors,

            string id,

            Outputs.GetDeploymentOptionsResourceQuotasResult resourceQuotas,

            ImmutableArray<Outputs.GetDeploymentOptionsRuntimeReleaseResult> runtimeReleases,

            ImmutableArray<Outputs.GetDeploymentOptionsSchedulerMachineResult> schedulerMachines,

            ImmutableArray<Outputs.GetDeploymentOptionsWorkerMachineResult> workerMachines,

            Outputs.GetDeploymentOptionsWorkerQueuesResult workerQueues,

            ImmutableArray<Outputs.GetDeploymentOptionsWorkloadIdentityOptionResult> workloadIdentityOptions)
        {
            CloudProvider = cloudProvider;
            DeploymentId = deploymentId;
            DeploymentType = deploymentType;
            Executor = executor;
            Executors = executors;
            Id = id;
            ResourceQuotas = resourceQuotas;
            RuntimeReleases = runtimeReleases;
            SchedulerMachines = schedulerMachines;
            WorkerMachines = workerMachines;
            WorkerQueues = workerQueues;
            WorkloadIdentityOptions = workloadIdentityOptions;
        }
    }
}
