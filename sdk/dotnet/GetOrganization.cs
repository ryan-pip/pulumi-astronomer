// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace RyanPip.Astronomer
{
    public static class GetOrganization
    {
        /// <summary>
        /// Astronomer Organization Resource
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Astronomer = Pulumi.Astronomer;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Astronomer.GetOrganization.Invoke(new()
        ///     {
        ///         Id = "abc123",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetOrganizationResult> InvokeAsync(GetOrganizationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationResult>("astronomer:index/getOrganization:getOrganization", args ?? new GetOrganizationArgs(), options.WithDefaults());

        /// <summary>
        /// Astronomer Organization Resource
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Astronomer = Pulumi.Astronomer;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Astronomer.GetOrganization.Invoke(new()
        ///     {
        ///         Id = "abc123",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetOrganizationResult> Invoke(GetOrganizationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationResult>("astronomer:index/getOrganization:getOrganization", args ?? new GetOrganizationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// Payment method (if set)
        /// </summary>
        [Input("paymentMethod")]
        public string? PaymentMethod { get; set; }

        public GetOrganizationArgs()
        {
        }
        public static new GetOrganizationArgs Empty => new GetOrganizationArgs();
    }

    public sealed class GetOrganizationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Payment method (if set)
        /// </summary>
        [Input("paymentMethod")]
        public Input<string>? PaymentMethod { get; set; }

        public GetOrganizationInvokeArgs()
        {
        }
        public static new GetOrganizationInvokeArgs Empty => new GetOrganizationInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationResult
    {
        /// <summary>
        /// Billing email on file for the organization.
        /// </summary>
        public readonly string BillingEmail;
        /// <summary>
        /// Timestamped string of when this organization was created
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Organization's unique identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether or not scim is enabled
        /// </summary>
        public readonly bool IsScimEnabled;
        /// <summary>
        /// List of managed domains (nested)
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOrganizationManagedDomainResult> ManagedDomains;
        /// <summary>
        /// Organization's name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Payment method (if set)
        /// </summary>
        public readonly string? PaymentMethod;
        /// <summary>
        /// Type of astro product (e.g. hosted or hybrid)
        /// </summary>
        public readonly string Product;
        /// <summary>
        /// Status of the organization
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Type of support plan the organization has
        /// </summary>
        public readonly string SupportPlan;
        /// <summary>
        /// When the trial expires, if organization is in a trial
        /// </summary>
        public readonly string TrialExpiresAt;
        /// <summary>
        /// Last time the organization was updated
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetOrganizationResult(
            string billingEmail,

            string createdAt,

            string id,

            bool isScimEnabled,

            ImmutableArray<Outputs.GetOrganizationManagedDomainResult> managedDomains,

            string name,

            string? paymentMethod,

            string product,

            string status,

            string supportPlan,

            string trialExpiresAt,

            string updatedAt)
        {
            BillingEmail = billingEmail;
            CreatedAt = createdAt;
            Id = id;
            IsScimEnabled = isScimEnabled;
            ManagedDomains = managedDomains;
            Name = name;
            PaymentMethod = paymentMethod;
            Product = product;
            Status = status;
            SupportPlan = supportPlan;
            TrialExpiresAt = trialExpiresAt;
            UpdatedAt = updatedAt;
        }
    }
}
