// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace RyanPip.Astronomer
{
    public static class GetOrganization
    {
        /// <summary>
        /// Organization data source
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Astronomer = Pulumi.Astronomer;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Astronomer.GetOrganization.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOrganizationResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationResult>("astronomer:index/getOrganization:getOrganization", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Organization data source
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Astronomer = Pulumi.Astronomer;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Astronomer.GetOrganization.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationResult>("astronomer:index/getOrganization:getOrganization", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetOrganizationResult
    {
        /// <summary>
        /// Organization billing email
        /// </summary>
        public readonly string BillingEmail;
        /// <summary>
        /// Organization creation timestamp
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Organization creator
        /// </summary>
        public readonly Outputs.GetOrganizationCreatedByResult CreatedBy;
        /// <summary>
        /// Organization identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether SCIM is enabled for the organization
        /// </summary>
        public readonly bool IsScimEnabled;
        /// <summary>
        /// Organization name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Organization payment method
        /// </summary>
        public readonly string PaymentMethod;
        /// <summary>
        /// Organization product type
        /// </summary>
        public readonly string Product;
        /// <summary>
        /// Organization status
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Organization support plan
        /// </summary>
        public readonly string SupportPlan;
        /// <summary>
        /// Organization trial expiration timestamp
        /// </summary>
        public readonly string TrialExpiresAt;
        /// <summary>
        /// Organization last updated timestamp
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// Organization updater
        /// </summary>
        public readonly Outputs.GetOrganizationUpdatedByResult UpdatedBy;

        [OutputConstructor]
        private GetOrganizationResult(
            string billingEmail,

            string createdAt,

            Outputs.GetOrganizationCreatedByResult createdBy,

            string id,

            bool isScimEnabled,

            string name,

            string paymentMethod,

            string product,

            string status,

            string supportPlan,

            string trialExpiresAt,

            string updatedAt,

            Outputs.GetOrganizationUpdatedByResult updatedBy)
        {
            BillingEmail = billingEmail;
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            Id = id;
            IsScimEnabled = isScimEnabled;
            Name = name;
            PaymentMethod = paymentMethod;
            Product = product;
            Status = status;
            SupportPlan = supportPlan;
            TrialExpiresAt = trialExpiresAt;
            UpdatedAt = updatedAt;
            UpdatedBy = updatedBy;
        }
    }
}
