// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace RyanPip.Astronomer
{
    public static class GetTeams
    {
        /// <summary>
        /// Teams data source
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Astronomer = Pulumi.Astronomer;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleTeams = Astronomer.GetTeams.Invoke();
        /// 
        ///     var exampleTeamsFilterByNames = Astronomer.GetTeams.Invoke(new()
        ///     {
        ///         Names = new[]
        ///         {
        ///             "my first team",
        ///             "my second team",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTeamsResult> InvokeAsync(GetTeamsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTeamsResult>("astronomer:index/getTeams:getTeams", args ?? new GetTeamsArgs(), options.WithDefaults());

        /// <summary>
        /// Teams data source
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Astronomer = Pulumi.Astronomer;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleTeams = Astronomer.GetTeams.Invoke();
        /// 
        ///     var exampleTeamsFilterByNames = Astronomer.GetTeams.Invoke(new()
        ///     {
        ///         Names = new[]
        ///         {
        ///             "my first team",
        ///             "my second team",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTeamsResult> Invoke(GetTeamsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTeamsResult>("astronomer:index/getTeams:getTeams", args ?? new GetTeamsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTeamsArgs : global::Pulumi.InvokeArgs
    {
        [Input("names")]
        private List<string>? _names;
        public List<string> Names
        {
            get => _names ?? (_names = new List<string>());
            set => _names = value;
        }

        public GetTeamsArgs()
        {
        }
        public static new GetTeamsArgs Empty => new GetTeamsArgs();
    }

    public sealed class GetTeamsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("names")]
        private InputList<string>? _names;
        public InputList<string> Names
        {
            get => _names ?? (_names = new InputList<string>());
            set => _names = value;
        }

        public GetTeamsInvokeArgs()
        {
        }
        public static new GetTeamsInvokeArgs Empty => new GetTeamsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTeamsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Names;
        public readonly ImmutableArray<Outputs.GetTeamsTeamResult> Teams;

        [OutputConstructor]
        private GetTeamsResult(
            string id,

            ImmutableArray<string> names,

            ImmutableArray<Outputs.GetTeamsTeamResult> teams)
        {
            Id = id;
            Names = names;
            Teams = teams;
        }
    }
}
