// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace RyanPip.Astronomer.Inputs
{

    public sealed class DeploymentWorkerQueueGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Worker queue Astro machine value - required for 'STANDARD' and 'DEDICATED' deployments
        /// </summary>
        [Input("astroMachine")]
        public Input<string>? AstroMachine { get; set; }

        /// <summary>
        /// Worker queue default
        /// </summary>
        [Input("isDefault", required: true)]
        public Input<bool> IsDefault { get; set; } = null!;

        /// <summary>
        /// Worker queue max worker count
        /// </summary>
        [Input("maxWorkerCount", required: true)]
        public Input<int> MaxWorkerCount { get; set; } = null!;

        /// <summary>
        /// Worker queue min worker count
        /// </summary>
        [Input("minWorkerCount", required: true)]
        public Input<int> MinWorkerCount { get; set; } = null!;

        /// <summary>
        /// Worker queue name
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Worker queue Node pool identifier - required for 'HYBRID' deployments
        /// </summary>
        [Input("nodePoolId")]
        public Input<string>? NodePoolId { get; set; }

        /// <summary>
        /// Worker queue pod CPU
        /// </summary>
        [Input("podCpu")]
        public Input<string>? PodCpu { get; set; }

        /// <summary>
        /// Worker queue pod memory
        /// </summary>
        [Input("podMemory")]
        public Input<string>? PodMemory { get; set; }

        /// <summary>
        /// Worker queue worker concurrency
        /// </summary>
        [Input("workerConcurrency", required: true)]
        public Input<int> WorkerConcurrency { get; set; } = null!;

        public DeploymentWorkerQueueGetArgs()
        {
        }
        public static new DeploymentWorkerQueueGetArgs Empty => new DeploymentWorkerQueueGetArgs();
    }
}
