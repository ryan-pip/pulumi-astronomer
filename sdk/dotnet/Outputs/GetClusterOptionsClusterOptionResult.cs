// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace RyanPip.Astronomer.Outputs
{

    [OutputType]
    public sealed class GetClusterOptionsClusterOptionResult
    {
        /// <summary>
        /// ClusterOption database instances
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterOptionsClusterOptionDatabaseInstanceResult> DatabaseInstances;
        /// <summary>
        /// ClusterOption default database instance
        /// </summary>
        public readonly Outputs.GetClusterOptionsClusterOptionDefaultDatabaseInstanceResult DefaultDatabaseInstance;
        /// <summary>
        /// ClusterOption default node instance
        /// </summary>
        public readonly Outputs.GetClusterOptionsClusterOptionDefaultNodeInstanceResult DefaultNodeInstance;
        /// <summary>
        /// ClusterOption default pod subnet range
        /// </summary>
        public readonly string DefaultPodSubnetRange;
        /// <summary>
        /// ClusterOption default region
        /// </summary>
        public readonly Outputs.GetClusterOptionsClusterOptionDefaultRegionResult DefaultRegion;
        /// <summary>
        /// ClusterOption default service peering range
        /// </summary>
        public readonly string DefaultServicePeeringRange;
        /// <summary>
        /// ClusterOption default service subnet range
        /// </summary>
        public readonly string DefaultServiceSubnetRange;
        /// <summary>
        /// ClusterOption default vps subnet range
        /// </summary>
        public readonly string DefaultVpcSubnetRange;
        /// <summary>
        /// ClusterOption node count default
        /// </summary>
        public readonly int NodeCountDefault;
        /// <summary>
        /// ClusterOption node count max
        /// </summary>
        public readonly int NodeCountMax;
        /// <summary>
        /// ClusterOption node count min
        /// </summary>
        public readonly int NodeCountMin;
        /// <summary>
        /// ClusterOption node instances
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterOptionsClusterOptionNodeInstanceResult> NodeInstances;
        /// <summary>
        /// ClusterOption provider
        /// </summary>
        public readonly string Provider;
        /// <summary>
        /// ClusterOption regions
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterOptionsClusterOptionRegionResult> Regions;

        [OutputConstructor]
        private GetClusterOptionsClusterOptionResult(
            ImmutableArray<Outputs.GetClusterOptionsClusterOptionDatabaseInstanceResult> databaseInstances,

            Outputs.GetClusterOptionsClusterOptionDefaultDatabaseInstanceResult defaultDatabaseInstance,

            Outputs.GetClusterOptionsClusterOptionDefaultNodeInstanceResult defaultNodeInstance,

            string defaultPodSubnetRange,

            Outputs.GetClusterOptionsClusterOptionDefaultRegionResult defaultRegion,

            string defaultServicePeeringRange,

            string defaultServiceSubnetRange,

            string defaultVpcSubnetRange,

            int nodeCountDefault,

            int nodeCountMax,

            int nodeCountMin,

            ImmutableArray<Outputs.GetClusterOptionsClusterOptionNodeInstanceResult> nodeInstances,

            string provider,

            ImmutableArray<Outputs.GetClusterOptionsClusterOptionRegionResult> regions)
        {
            DatabaseInstances = databaseInstances;
            DefaultDatabaseInstance = defaultDatabaseInstance;
            DefaultNodeInstance = defaultNodeInstance;
            DefaultPodSubnetRange = defaultPodSubnetRange;
            DefaultRegion = defaultRegion;
            DefaultServicePeeringRange = defaultServicePeeringRange;
            DefaultServiceSubnetRange = defaultServiceSubnetRange;
            DefaultVpcSubnetRange = defaultVpcSubnetRange;
            NodeCountDefault = nodeCountDefault;
            NodeCountMax = nodeCountMax;
            NodeCountMin = nodeCountMin;
            NodeInstances = nodeInstances;
            Provider = provider;
            Regions = regions;
        }
    }
}
