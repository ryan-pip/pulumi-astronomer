// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace RyanPip.Astronomer.Outputs
{

    [OutputType]
    public sealed class GetClustersClusterResult
    {
        /// <summary>
        /// Cluster cloud provider
        /// </summary>
        public readonly string CloudProvider;
        /// <summary>
        /// Cluster creation timestamp
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Cluster database instance type
        /// </summary>
        public readonly string DbInstanceType;
        /// <summary>
        /// Cluster identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether the cluster is limited
        /// </summary>
        public readonly bool IsLimited;
        /// <summary>
        /// Cluster metadata
        /// </summary>
        public readonly Outputs.GetClustersClusterMetadataResult Metadata;
        /// <summary>
        /// Cluster name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Cluster node pools
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClustersClusterNodePoolResult> NodePools;
        /// <summary>
        /// Cluster pod subnet range
        /// </summary>
        public readonly string PodSubnetRange;
        /// <summary>
        /// Cluster provider account
        /// </summary>
        public readonly string ProviderAccount;
        /// <summary>
        /// Cluster region
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// Cluster service peering range
        /// </summary>
        public readonly string ServicePeeringRange;
        /// <summary>
        /// Cluster service subnet range
        /// </summary>
        public readonly string ServiceSubnetRange;
        /// <summary>
        /// Cluster status
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Cluster tags
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClustersClusterTagResult> Tags;
        /// <summary>
        /// Cluster tenant ID
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// Cluster type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Cluster last updated timestamp
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// Cluster VPC subnet range
        /// </summary>
        public readonly string VpcSubnetRange;
        /// <summary>
        /// Cluster workspace IDs
        /// </summary>
        public readonly ImmutableArray<string> WorkspaceIds;

        [OutputConstructor]
        private GetClustersClusterResult(
            string cloudProvider,

            string createdAt,

            string dbInstanceType,

            string id,

            bool isLimited,

            Outputs.GetClustersClusterMetadataResult metadata,

            string name,

            ImmutableArray<Outputs.GetClustersClusterNodePoolResult> nodePools,

            string podSubnetRange,

            string providerAccount,

            string region,

            string servicePeeringRange,

            string serviceSubnetRange,

            string status,

            ImmutableArray<Outputs.GetClustersClusterTagResult> tags,

            string tenantId,

            string type,

            string updatedAt,

            string vpcSubnetRange,

            ImmutableArray<string> workspaceIds)
        {
            CloudProvider = cloudProvider;
            CreatedAt = createdAt;
            DbInstanceType = dbInstanceType;
            Id = id;
            IsLimited = isLimited;
            Metadata = metadata;
            Name = name;
            NodePools = nodePools;
            PodSubnetRange = podSubnetRange;
            ProviderAccount = providerAccount;
            Region = region;
            ServicePeeringRange = servicePeeringRange;
            ServiceSubnetRange = serviceSubnetRange;
            Status = status;
            Tags = tags;
            TenantId = tenantId;
            Type = type;
            UpdatedAt = updatedAt;
            VpcSubnetRange = vpcSubnetRange;
            WorkspaceIds = workspaceIds;
        }
    }
}
