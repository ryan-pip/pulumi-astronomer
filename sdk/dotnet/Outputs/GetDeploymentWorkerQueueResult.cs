// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace RyanPip.Astronomer.Outputs
{

    [OutputType]
    public sealed class GetDeploymentWorkerQueueResult
    {
        /// <summary>
        /// Worker queue Astro machine value
        /// </summary>
        public readonly string AstroMachine;
        /// <summary>
        /// Worker queue identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether Worker queue is default
        /// </summary>
        public readonly bool IsDefault;
        /// <summary>
        /// Worker queue max worker count
        /// </summary>
        public readonly int MaxWorkerCount;
        /// <summary>
        /// Worker queue min worker count
        /// </summary>
        public readonly int MinWorkerCount;
        /// <summary>
        /// Worker queue name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Worker queue node pool identifier
        /// </summary>
        public readonly string NodePoolId;
        /// <summary>
        /// Worker queue pod CPU
        /// </summary>
        public readonly string PodCpu;
        /// <summary>
        /// Worker queue pod memory
        /// </summary>
        public readonly string PodMemory;
        /// <summary>
        /// Worker queue worker concurrency
        /// </summary>
        public readonly int WorkerConcurrency;

        [OutputConstructor]
        private GetDeploymentWorkerQueueResult(
            string astroMachine,

            string id,

            bool isDefault,

            int maxWorkerCount,

            int minWorkerCount,

            string name,

            string nodePoolId,

            string podCpu,

            string podMemory,

            int workerConcurrency)
        {
            AstroMachine = astroMachine;
            Id = id;
            IsDefault = isDefault;
            MaxWorkerCount = maxWorkerCount;
            MinWorkerCount = minWorkerCount;
            Name = name;
            NodePoolId = nodePoolId;
            PodCpu = podCpu;
            PodMemory = podMemory;
            WorkerConcurrency = workerConcurrency;
        }
    }
}
