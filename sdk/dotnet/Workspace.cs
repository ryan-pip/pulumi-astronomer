// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace RyanPip.Astronomer
{
    /// <summary>
    /// Workspace resource
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Astronomer = RyanPip.Astronomer;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Astronomer.Workspace("example", new()
    ///     {
    ///         Description = "my first workspace",
    ///         CicdEnforcedDefault = true,
    ///     });
    /// 
    ///     var importedWorkspace = new Astronomer.Workspace("importedWorkspace", new()
    ///     {
    ///         Description = "an existing workspace",
    ///         CicdEnforcedDefault = true,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [AstronomerResourceType("astronomer:index/workspace:Workspace")]
    public partial class Workspace : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether new Deployments enforce CI/CD deploys by default
        /// </summary>
        [Output("cicdEnforcedDefault")]
        public Output<bool> CicdEnforcedDefault { get; private set; } = null!;

        /// <summary>
        /// Workspace creation timestamp
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Workspace creator
        /// </summary>
        [Output("createdBy")]
        public Output<Outputs.WorkspaceCreatedBy> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// Workspace description
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Workspace name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Workspace last updated timestamp
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// Workspace updater
        /// </summary>
        [Output("updatedBy")]
        public Output<Outputs.WorkspaceUpdatedBy> UpdatedBy { get; private set; } = null!;


        /// <summary>
        /// Create a Workspace resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Workspace(string name, WorkspaceArgs args, CustomResourceOptions? options = null)
            : base("astronomer:index/workspace:Workspace", name, args ?? new WorkspaceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Workspace(string name, Input<string> id, WorkspaceState? state = null, CustomResourceOptions? options = null)
            : base("astronomer:index/workspace:Workspace", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ryan-pip/pulumi-astronomer",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Workspace resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Workspace Get(string name, Input<string> id, WorkspaceState? state = null, CustomResourceOptions? options = null)
        {
            return new Workspace(name, id, state, options);
        }
    }

    public sealed class WorkspaceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether new Deployments enforce CI/CD deploys by default
        /// </summary>
        [Input("cicdEnforcedDefault", required: true)]
        public Input<bool> CicdEnforcedDefault { get; set; } = null!;

        /// <summary>
        /// Workspace description
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// Workspace name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public WorkspaceArgs()
        {
        }
        public static new WorkspaceArgs Empty => new WorkspaceArgs();
    }

    public sealed class WorkspaceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether new Deployments enforce CI/CD deploys by default
        /// </summary>
        [Input("cicdEnforcedDefault")]
        public Input<bool>? CicdEnforcedDefault { get; set; }

        /// <summary>
        /// Workspace creation timestamp
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Workspace creator
        /// </summary>
        [Input("createdBy")]
        public Input<Inputs.WorkspaceCreatedByGetArgs>? CreatedBy { get; set; }

        /// <summary>
        /// Workspace description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Workspace name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Workspace last updated timestamp
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// Workspace updater
        /// </summary>
        [Input("updatedBy")]
        public Input<Inputs.WorkspaceUpdatedByGetArgs>? UpdatedBy { get; set; }

        public WorkspaceState()
        {
        }
        public static new WorkspaceState Empty => new WorkspaceState();
    }
}
