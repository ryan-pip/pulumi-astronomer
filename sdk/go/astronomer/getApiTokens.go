// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package astronomer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ryan-pip/pulumi-astronomer/sdk/go/astronomer/internal"
)

// API Tokens data source
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/ryan-pip/pulumi-astronomer/sdk/go/astronomer"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleApiTokens, err := astronomer.GetApiTokens(ctx, &astronomer.GetApiTokensArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = astronomer.GetApiTokens(ctx, &astronomer.GetApiTokensArgs{
//				IncludeOnlyOrganizationTokens: pulumi.BoolRef(true),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = astronomer.GetApiTokens(ctx, &astronomer.GetApiTokensArgs{
//				WorkspaceId: pulumi.StringRef("clx42sxw501gl01o0gjenthnh"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = astronomer.GetApiTokens(ctx, &astronomer.GetApiTokensArgs{
//				DeploymentId: pulumi.StringRef("clx44jyu001m201m5dzsbexqr"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("apiTokens", exampleApiTokens)
//			return nil
//		})
//	}
//
// ```
func GetApiTokens(ctx *pulumi.Context, args *GetApiTokensArgs, opts ...pulumi.InvokeOption) (*GetApiTokensResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetApiTokensResult
	err := ctx.Invoke("astronomer:index/getApiTokens:getApiTokens", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApiTokens.
type GetApiTokensArgs struct {
	DeploymentId                  *string `pulumi:"deploymentId"`
	IncludeOnlyOrganizationTokens *bool   `pulumi:"includeOnlyOrganizationTokens"`
	WorkspaceId                   *string `pulumi:"workspaceId"`
}

// A collection of values returned by getApiTokens.
type GetApiTokensResult struct {
	ApiTokens    []GetApiTokensApiToken `pulumi:"apiTokens"`
	DeploymentId *string                `pulumi:"deploymentId"`
	// The provider-assigned unique ID for this managed resource.
	Id                            string  `pulumi:"id"`
	IncludeOnlyOrganizationTokens *bool   `pulumi:"includeOnlyOrganizationTokens"`
	WorkspaceId                   *string `pulumi:"workspaceId"`
}

func GetApiTokensOutput(ctx *pulumi.Context, args GetApiTokensOutputArgs, opts ...pulumi.InvokeOption) GetApiTokensResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetApiTokensResultOutput, error) {
			args := v.(GetApiTokensArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetApiTokensResult
			secret, err := ctx.InvokePackageRaw("astronomer:index/getApiTokens:getApiTokens", args, &rv, "", opts...)
			if err != nil {
				return GetApiTokensResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetApiTokensResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetApiTokensResultOutput), nil
			}
			return output, nil
		}).(GetApiTokensResultOutput)
}

// A collection of arguments for invoking getApiTokens.
type GetApiTokensOutputArgs struct {
	DeploymentId                  pulumi.StringPtrInput `pulumi:"deploymentId"`
	IncludeOnlyOrganizationTokens pulumi.BoolPtrInput   `pulumi:"includeOnlyOrganizationTokens"`
	WorkspaceId                   pulumi.StringPtrInput `pulumi:"workspaceId"`
}

func (GetApiTokensOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiTokensArgs)(nil)).Elem()
}

// A collection of values returned by getApiTokens.
type GetApiTokensResultOutput struct{ *pulumi.OutputState }

func (GetApiTokensResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiTokensResult)(nil)).Elem()
}

func (o GetApiTokensResultOutput) ToGetApiTokensResultOutput() GetApiTokensResultOutput {
	return o
}

func (o GetApiTokensResultOutput) ToGetApiTokensResultOutputWithContext(ctx context.Context) GetApiTokensResultOutput {
	return o
}

func (o GetApiTokensResultOutput) ApiTokens() GetApiTokensApiTokenArrayOutput {
	return o.ApplyT(func(v GetApiTokensResult) []GetApiTokensApiToken { return v.ApiTokens }).(GetApiTokensApiTokenArrayOutput)
}

func (o GetApiTokensResultOutput) DeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApiTokensResult) *string { return v.DeploymentId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetApiTokensResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokensResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetApiTokensResultOutput) IncludeOnlyOrganizationTokens() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetApiTokensResult) *bool { return v.IncludeOnlyOrganizationTokens }).(pulumi.BoolPtrOutput)
}

func (o GetApiTokensResultOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApiTokensResult) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetApiTokensResultOutput{})
}
