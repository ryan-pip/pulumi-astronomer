// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package astronomer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ryan-pip/pulumi-astronomer/sdk/go/astronomer/internal"
)

// Astronomer Organization Resource
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/ryan-pip/pulumi-astronomer/sdk/go/astronomer"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := astronomer.GetOrganization(ctx, &astronomer.GetOrganizationArgs{
//				Id: "abc123",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOrganization(ctx *pulumi.Context, args *GetOrganizationArgs, opts ...pulumi.InvokeOption) (*GetOrganizationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOrganizationResult
	err := ctx.Invoke("astronomer:index/getOrganization:getOrganization", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrganization.
type GetOrganizationArgs struct {
	Id string `pulumi:"id"`
	// Payment method (if set)
	PaymentMethod *string `pulumi:"paymentMethod"`
}

// A collection of values returned by getOrganization.
type GetOrganizationResult struct {
	// Billing email on file for the organization.
	BillingEmail string `pulumi:"billingEmail"`
	// Timestamped string of when this organization was created
	CreatedAt string `pulumi:"createdAt"`
	// Organization's unique identifier
	Id string `pulumi:"id"`
	// Whether or not scim is enabled
	IsScimEnabled bool `pulumi:"isScimEnabled"`
	// List of managed domains (nested)
	ManagedDomains []GetOrganizationManagedDomain `pulumi:"managedDomains"`
	// Organization's name
	Name string `pulumi:"name"`
	// Payment method (if set)
	PaymentMethod *string `pulumi:"paymentMethod"`
	// Type of astro product (e.g. hosted or hybrid)
	Product string `pulumi:"product"`
	// Status of the organization
	Status string `pulumi:"status"`
	// Type of support plan the organization has
	SupportPlan string `pulumi:"supportPlan"`
	// When the trial expires, if organization is in a trial
	TrialExpiresAt string `pulumi:"trialExpiresAt"`
	// Last time the organization was updated
	UpdatedAt string `pulumi:"updatedAt"`
}

func GetOrganizationOutput(ctx *pulumi.Context, args GetOrganizationOutputArgs, opts ...pulumi.InvokeOption) GetOrganizationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOrganizationResult, error) {
			args := v.(GetOrganizationArgs)
			r, err := GetOrganization(ctx, &args, opts...)
			var s GetOrganizationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOrganizationResultOutput)
}

// A collection of arguments for invoking getOrganization.
type GetOrganizationOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
	// Payment method (if set)
	PaymentMethod pulumi.StringPtrInput `pulumi:"paymentMethod"`
}

func (GetOrganizationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationArgs)(nil)).Elem()
}

// A collection of values returned by getOrganization.
type GetOrganizationResultOutput struct{ *pulumi.OutputState }

func (GetOrganizationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationResult)(nil)).Elem()
}

func (o GetOrganizationResultOutput) ToGetOrganizationResultOutput() GetOrganizationResultOutput {
	return o
}

func (o GetOrganizationResultOutput) ToGetOrganizationResultOutputWithContext(ctx context.Context) GetOrganizationResultOutput {
	return o
}

// Billing email on file for the organization.
func (o GetOrganizationResultOutput) BillingEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.BillingEmail }).(pulumi.StringOutput)
}

// Timestamped string of when this organization was created
func (o GetOrganizationResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Organization's unique identifier
func (o GetOrganizationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Whether or not scim is enabled
func (o GetOrganizationResultOutput) IsScimEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationResult) bool { return v.IsScimEnabled }).(pulumi.BoolOutput)
}

// List of managed domains (nested)
func (o GetOrganizationResultOutput) ManagedDomains() GetOrganizationManagedDomainArrayOutput {
	return o.ApplyT(func(v GetOrganizationResult) []GetOrganizationManagedDomain { return v.ManagedDomains }).(GetOrganizationManagedDomainArrayOutput)
}

// Organization's name
func (o GetOrganizationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.Name }).(pulumi.StringOutput)
}

// Payment method (if set)
func (o GetOrganizationResultOutput) PaymentMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOrganizationResult) *string { return v.PaymentMethod }).(pulumi.StringPtrOutput)
}

// Type of astro product (e.g. hosted or hybrid)
func (o GetOrganizationResultOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.Product }).(pulumi.StringOutput)
}

// Status of the organization
func (o GetOrganizationResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.Status }).(pulumi.StringOutput)
}

// Type of support plan the organization has
func (o GetOrganizationResultOutput) SupportPlan() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.SupportPlan }).(pulumi.StringOutput)
}

// When the trial expires, if organization is in a trial
func (o GetOrganizationResultOutput) TrialExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.TrialExpiresAt }).(pulumi.StringOutput)
}

// Last time the organization was updated
func (o GetOrganizationResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOrganizationResultOutput{})
}
