// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package astronomer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ryan-pip/pulumi-astronomer/sdk/go/astronomer/internal"
)

// Teams data source
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/ryan-pip/pulumi-astronomer/sdk/go/astronomer"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := astronomer.GetTeams(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = astronomer.GetTeams(ctx, &astronomer.GetTeamsArgs{
//				Names: []string{
//					"my first team",
//					"my second team",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTeams(ctx *pulumi.Context, args *GetTeamsArgs, opts ...pulumi.InvokeOption) (*GetTeamsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTeamsResult
	err := ctx.Invoke("astronomer:index/getTeams:getTeams", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTeams.
type GetTeamsArgs struct {
	Names []string `pulumi:"names"`
}

// A collection of values returned by getTeams.
type GetTeamsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id    string         `pulumi:"id"`
	Names []string       `pulumi:"names"`
	Teams []GetTeamsTeam `pulumi:"teams"`
}

func GetTeamsOutput(ctx *pulumi.Context, args GetTeamsOutputArgs, opts ...pulumi.InvokeOption) GetTeamsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTeamsResult, error) {
			args := v.(GetTeamsArgs)
			r, err := GetTeams(ctx, &args, opts...)
			var s GetTeamsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTeamsResultOutput)
}

// A collection of arguments for invoking getTeams.
type GetTeamsOutputArgs struct {
	Names pulumi.StringArrayInput `pulumi:"names"`
}

func (GetTeamsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamsArgs)(nil)).Elem()
}

// A collection of values returned by getTeams.
type GetTeamsResultOutput struct{ *pulumi.OutputState }

func (GetTeamsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamsResult)(nil)).Elem()
}

func (o GetTeamsResultOutput) ToGetTeamsResultOutput() GetTeamsResultOutput {
	return o
}

func (o GetTeamsResultOutput) ToGetTeamsResultOutputWithContext(ctx context.Context) GetTeamsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTeamsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTeamsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTeamsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetTeamsResultOutput) Teams() GetTeamsTeamArrayOutput {
	return o.ApplyT(func(v GetTeamsResult) []GetTeamsTeam { return v.Teams }).(GetTeamsTeamArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTeamsResultOutput{})
}
