// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package astronomer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ryan-pip/pulumi-astronomer/sdk/go/astronomer/internal"
)

// Workspaces data source
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/ryan-pip/pulumi-astronomer/sdk/go/astronomer"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := astronomer.GetWorkspaces(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = astronomer.GetWorkspaces(ctx, &astronomer.GetWorkspacesArgs{
//				WorkspaceIds: []string{
//					"clozc036j01to01jrlgvueo8t",
//					"clozc036j01to01jrlgvueo81",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = astronomer.GetWorkspaces(ctx, &astronomer.GetWorkspacesArgs{
//				Names: []string{
//					"my first workspace",
//					"my second workspace",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetWorkspaces(ctx *pulumi.Context, args *GetWorkspacesArgs, opts ...pulumi.InvokeOption) (*GetWorkspacesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetWorkspacesResult
	err := ctx.Invoke("astronomer:index/getWorkspaces:getWorkspaces", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkspaces.
type GetWorkspacesArgs struct {
	Names        []string `pulumi:"names"`
	WorkspaceIds []string `pulumi:"workspaceIds"`
}

// A collection of values returned by getWorkspaces.
type GetWorkspacesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id           string                   `pulumi:"id"`
	Names        []string                 `pulumi:"names"`
	WorkspaceIds []string                 `pulumi:"workspaceIds"`
	Workspaces   []GetWorkspacesWorkspace `pulumi:"workspaces"`
}

func GetWorkspacesOutput(ctx *pulumi.Context, args GetWorkspacesOutputArgs, opts ...pulumi.InvokeOption) GetWorkspacesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetWorkspacesResult, error) {
			args := v.(GetWorkspacesArgs)
			r, err := GetWorkspaces(ctx, &args, opts...)
			var s GetWorkspacesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetWorkspacesResultOutput)
}

// A collection of arguments for invoking getWorkspaces.
type GetWorkspacesOutputArgs struct {
	Names        pulumi.StringArrayInput `pulumi:"names"`
	WorkspaceIds pulumi.StringArrayInput `pulumi:"workspaceIds"`
}

func (GetWorkspacesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspacesArgs)(nil)).Elem()
}

// A collection of values returned by getWorkspaces.
type GetWorkspacesResultOutput struct{ *pulumi.OutputState }

func (GetWorkspacesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspacesResult)(nil)).Elem()
}

func (o GetWorkspacesResultOutput) ToGetWorkspacesResultOutput() GetWorkspacesResultOutput {
	return o
}

func (o GetWorkspacesResultOutput) ToGetWorkspacesResultOutputWithContext(ctx context.Context) GetWorkspacesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetWorkspacesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetWorkspacesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWorkspacesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetWorkspacesResultOutput) WorkspaceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWorkspacesResult) []string { return v.WorkspaceIds }).(pulumi.StringArrayOutput)
}

func (o GetWorkspacesResultOutput) Workspaces() GetWorkspacesWorkspaceArrayOutput {
	return o.ApplyT(func(v GetWorkspacesResult) []GetWorkspacesWorkspace { return v.Workspaces }).(GetWorkspacesWorkspaceArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetWorkspacesResultOutput{})
}
