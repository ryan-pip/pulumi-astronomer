// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package astronomer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ryan-pip/pulumi-astronomer/sdk/go/astronomer/internal"
)

var _ = internal.GetEnvOrDefault

type ClusterK8sTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

// ClusterK8sTagInput is an input type that accepts ClusterK8sTagArgs and ClusterK8sTagOutput values.
// You can construct a concrete instance of `ClusterK8sTagInput` via:
//
//	ClusterK8sTagArgs{...}
type ClusterK8sTagInput interface {
	pulumi.Input

	ToClusterK8sTagOutput() ClusterK8sTagOutput
	ToClusterK8sTagOutputWithContext(context.Context) ClusterK8sTagOutput
}

type ClusterK8sTagArgs struct {
	// The tag's key.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag's value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterK8sTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterK8sTag)(nil)).Elem()
}

func (i ClusterK8sTagArgs) ToClusterK8sTagOutput() ClusterK8sTagOutput {
	return i.ToClusterK8sTagOutputWithContext(context.Background())
}

func (i ClusterK8sTagArgs) ToClusterK8sTagOutputWithContext(ctx context.Context) ClusterK8sTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterK8sTagOutput)
}

// ClusterK8sTagArrayInput is an input type that accepts ClusterK8sTagArray and ClusterK8sTagArrayOutput values.
// You can construct a concrete instance of `ClusterK8sTagArrayInput` via:
//
//	ClusterK8sTagArray{ ClusterK8sTagArgs{...} }
type ClusterK8sTagArrayInput interface {
	pulumi.Input

	ToClusterK8sTagArrayOutput() ClusterK8sTagArrayOutput
	ToClusterK8sTagArrayOutputWithContext(context.Context) ClusterK8sTagArrayOutput
}

type ClusterK8sTagArray []ClusterK8sTagInput

func (ClusterK8sTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterK8sTag)(nil)).Elem()
}

func (i ClusterK8sTagArray) ToClusterK8sTagArrayOutput() ClusterK8sTagArrayOutput {
	return i.ToClusterK8sTagArrayOutputWithContext(context.Background())
}

func (i ClusterK8sTagArray) ToClusterK8sTagArrayOutputWithContext(ctx context.Context) ClusterK8sTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterK8sTagArrayOutput)
}

type ClusterK8sTagOutput struct{ *pulumi.OutputState }

func (ClusterK8sTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterK8sTag)(nil)).Elem()
}

func (o ClusterK8sTagOutput) ToClusterK8sTagOutput() ClusterK8sTagOutput {
	return o
}

func (o ClusterK8sTagOutput) ToClusterK8sTagOutputWithContext(ctx context.Context) ClusterK8sTagOutput {
	return o
}

// The tag's key.
func (o ClusterK8sTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterK8sTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag's value.
func (o ClusterK8sTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterK8sTag) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterK8sTagArrayOutput struct{ *pulumi.OutputState }

func (ClusterK8sTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterK8sTag)(nil)).Elem()
}

func (o ClusterK8sTagArrayOutput) ToClusterK8sTagArrayOutput() ClusterK8sTagArrayOutput {
	return o
}

func (o ClusterK8sTagArrayOutput) ToClusterK8sTagArrayOutputWithContext(ctx context.Context) ClusterK8sTagArrayOutput {
	return o
}

func (o ClusterK8sTagArrayOutput) Index(i pulumi.IntInput) ClusterK8sTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterK8sTag {
		return vs[0].([]ClusterK8sTag)[vs[1].(int)]
	}).(ClusterK8sTagOutput)
}

type ClusterMetadata struct {
	ExternalIps   []string `pulumi:"externalIps"`
	OidcIssuerUrl *string  `pulumi:"oidcIssuerUrl"`
}

// ClusterMetadataInput is an input type that accepts ClusterMetadataArgs and ClusterMetadataOutput values.
// You can construct a concrete instance of `ClusterMetadataInput` via:
//
//	ClusterMetadataArgs{...}
type ClusterMetadataInput interface {
	pulumi.Input

	ToClusterMetadataOutput() ClusterMetadataOutput
	ToClusterMetadataOutputWithContext(context.Context) ClusterMetadataOutput
}

type ClusterMetadataArgs struct {
	ExternalIps   pulumi.StringArrayInput `pulumi:"externalIps"`
	OidcIssuerUrl pulumi.StringPtrInput   `pulumi:"oidcIssuerUrl"`
}

func (ClusterMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMetadata)(nil)).Elem()
}

func (i ClusterMetadataArgs) ToClusterMetadataOutput() ClusterMetadataOutput {
	return i.ToClusterMetadataOutputWithContext(context.Background())
}

func (i ClusterMetadataArgs) ToClusterMetadataOutputWithContext(ctx context.Context) ClusterMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMetadataOutput)
}

func (i ClusterMetadataArgs) ToClusterMetadataPtrOutput() ClusterMetadataPtrOutput {
	return i.ToClusterMetadataPtrOutputWithContext(context.Background())
}

func (i ClusterMetadataArgs) ToClusterMetadataPtrOutputWithContext(ctx context.Context) ClusterMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMetadataOutput).ToClusterMetadataPtrOutputWithContext(ctx)
}

// ClusterMetadataPtrInput is an input type that accepts ClusterMetadataArgs, ClusterMetadataPtr and ClusterMetadataPtrOutput values.
// You can construct a concrete instance of `ClusterMetadataPtrInput` via:
//
//	        ClusterMetadataArgs{...}
//
//	or:
//
//	        nil
type ClusterMetadataPtrInput interface {
	pulumi.Input

	ToClusterMetadataPtrOutput() ClusterMetadataPtrOutput
	ToClusterMetadataPtrOutputWithContext(context.Context) ClusterMetadataPtrOutput
}

type clusterMetadataPtrType ClusterMetadataArgs

func ClusterMetadataPtr(v *ClusterMetadataArgs) ClusterMetadataPtrInput {
	return (*clusterMetadataPtrType)(v)
}

func (*clusterMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMetadata)(nil)).Elem()
}

func (i *clusterMetadataPtrType) ToClusterMetadataPtrOutput() ClusterMetadataPtrOutput {
	return i.ToClusterMetadataPtrOutputWithContext(context.Background())
}

func (i *clusterMetadataPtrType) ToClusterMetadataPtrOutputWithContext(ctx context.Context) ClusterMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMetadataPtrOutput)
}

type ClusterMetadataOutput struct{ *pulumi.OutputState }

func (ClusterMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMetadata)(nil)).Elem()
}

func (o ClusterMetadataOutput) ToClusterMetadataOutput() ClusterMetadataOutput {
	return o
}

func (o ClusterMetadataOutput) ToClusterMetadataOutputWithContext(ctx context.Context) ClusterMetadataOutput {
	return o
}

func (o ClusterMetadataOutput) ToClusterMetadataPtrOutput() ClusterMetadataPtrOutput {
	return o.ToClusterMetadataPtrOutputWithContext(context.Background())
}

func (o ClusterMetadataOutput) ToClusterMetadataPtrOutputWithContext(ctx context.Context) ClusterMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMetadata) *ClusterMetadata {
		return &v
	}).(ClusterMetadataPtrOutput)
}

func (o ClusterMetadataOutput) ExternalIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterMetadata) []string { return v.ExternalIps }).(pulumi.StringArrayOutput)
}

func (o ClusterMetadataOutput) OidcIssuerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMetadata) *string { return v.OidcIssuerUrl }).(pulumi.StringPtrOutput)
}

type ClusterMetadataPtrOutput struct{ *pulumi.OutputState }

func (ClusterMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMetadata)(nil)).Elem()
}

func (o ClusterMetadataPtrOutput) ToClusterMetadataPtrOutput() ClusterMetadataPtrOutput {
	return o
}

func (o ClusterMetadataPtrOutput) ToClusterMetadataPtrOutputWithContext(ctx context.Context) ClusterMetadataPtrOutput {
	return o
}

func (o ClusterMetadataPtrOutput) Elem() ClusterMetadataOutput {
	return o.ApplyT(func(v *ClusterMetadata) ClusterMetadata {
		if v != nil {
			return *v
		}
		var ret ClusterMetadata
		return ret
	}).(ClusterMetadataOutput)
}

func (o ClusterMetadataPtrOutput) ExternalIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterMetadata) []string {
		if v == nil {
			return nil
		}
		return v.ExternalIps
	}).(pulumi.StringArrayOutput)
}

func (o ClusterMetadataPtrOutput) OidcIssuerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMetadata) *string {
		if v == nil {
			return nil
		}
		return v.OidcIssuerUrl
	}).(pulumi.StringPtrOutput)
}

type ClusterNodePool struct {
	// Whether the node pool is the default node pool of the cluster.
	IsDefault *bool `pulumi:"isDefault"`
	// The maximum number of nodes that can be created in the node pool.
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// The name of the node pool.
	Name string `pulumi:"name"`
	// The type of node instance that is used for the node pool.
	NodeInstanceType string `pulumi:"nodeInstanceType"`
}

// ClusterNodePoolInput is an input type that accepts ClusterNodePoolArgs and ClusterNodePoolOutput values.
// You can construct a concrete instance of `ClusterNodePoolInput` via:
//
//	ClusterNodePoolArgs{...}
type ClusterNodePoolInput interface {
	pulumi.Input

	ToClusterNodePoolOutput() ClusterNodePoolOutput
	ToClusterNodePoolOutputWithContext(context.Context) ClusterNodePoolOutput
}

type ClusterNodePoolArgs struct {
	// Whether the node pool is the default node pool of the cluster.
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// The maximum number of nodes that can be created in the node pool.
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// The name of the node pool.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of node instance that is used for the node pool.
	NodeInstanceType pulumi.StringInput `pulumi:"nodeInstanceType"`
}

func (ClusterNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePool)(nil)).Elem()
}

func (i ClusterNodePoolArgs) ToClusterNodePoolOutput() ClusterNodePoolOutput {
	return i.ToClusterNodePoolOutputWithContext(context.Background())
}

func (i ClusterNodePoolArgs) ToClusterNodePoolOutputWithContext(ctx context.Context) ClusterNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolOutput)
}

// ClusterNodePoolArrayInput is an input type that accepts ClusterNodePoolArray and ClusterNodePoolArrayOutput values.
// You can construct a concrete instance of `ClusterNodePoolArrayInput` via:
//
//	ClusterNodePoolArray{ ClusterNodePoolArgs{...} }
type ClusterNodePoolArrayInput interface {
	pulumi.Input

	ToClusterNodePoolArrayOutput() ClusterNodePoolArrayOutput
	ToClusterNodePoolArrayOutputWithContext(context.Context) ClusterNodePoolArrayOutput
}

type ClusterNodePoolArray []ClusterNodePoolInput

func (ClusterNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePool)(nil)).Elem()
}

func (i ClusterNodePoolArray) ToClusterNodePoolArrayOutput() ClusterNodePoolArrayOutput {
	return i.ToClusterNodePoolArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolArray) ToClusterNodePoolArrayOutputWithContext(ctx context.Context) ClusterNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolArrayOutput)
}

type ClusterNodePoolOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePool)(nil)).Elem()
}

func (o ClusterNodePoolOutput) ToClusterNodePoolOutput() ClusterNodePoolOutput {
	return o
}

func (o ClusterNodePoolOutput) ToClusterNodePoolOutputWithContext(ctx context.Context) ClusterNodePoolOutput {
	return o
}

// Whether the node pool is the default node pool of the cluster.
func (o ClusterNodePoolOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The maximum number of nodes that can be created in the node pool.
func (o ClusterNodePoolOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePool) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// The name of the node pool.
func (o ClusterNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePool) string { return v.Name }).(pulumi.StringOutput)
}

// The type of node instance that is used for the node pool.
func (o ClusterNodePoolOutput) NodeInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePool) string { return v.NodeInstanceType }).(pulumi.StringOutput)
}

type ClusterNodePoolArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePool)(nil)).Elem()
}

func (o ClusterNodePoolArrayOutput) ToClusterNodePoolArrayOutput() ClusterNodePoolArrayOutput {
	return o
}

func (o ClusterNodePoolArrayOutput) ToClusterNodePoolArrayOutputWithContext(ctx context.Context) ClusterNodePoolArrayOutput {
	return o
}

func (o ClusterNodePoolArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePool {
		return vs[0].([]ClusterNodePool)[vs[1].(int)]
	}).(ClusterNodePoolOutput)
}

type DeploymentEnvironmentVariable struct {
	// Whether the environment variable is a secret.
	IsSecret bool `pulumi:"isSecret"`
	// The environment variable key, used to call the value in code.
	Key string `pulumi:"key"`
	// The environment variable value.
	Value *string `pulumi:"value"`
}

// DeploymentEnvironmentVariableInput is an input type that accepts DeploymentEnvironmentVariableArgs and DeploymentEnvironmentVariableOutput values.
// You can construct a concrete instance of `DeploymentEnvironmentVariableInput` via:
//
//	DeploymentEnvironmentVariableArgs{...}
type DeploymentEnvironmentVariableInput interface {
	pulumi.Input

	ToDeploymentEnvironmentVariableOutput() DeploymentEnvironmentVariableOutput
	ToDeploymentEnvironmentVariableOutputWithContext(context.Context) DeploymentEnvironmentVariableOutput
}

type DeploymentEnvironmentVariableArgs struct {
	// Whether the environment variable is a secret.
	IsSecret pulumi.BoolInput `pulumi:"isSecret"`
	// The environment variable key, used to call the value in code.
	Key pulumi.StringInput `pulumi:"key"`
	// The environment variable value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DeploymentEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentEnvironmentVariable)(nil)).Elem()
}

func (i DeploymentEnvironmentVariableArgs) ToDeploymentEnvironmentVariableOutput() DeploymentEnvironmentVariableOutput {
	return i.ToDeploymentEnvironmentVariableOutputWithContext(context.Background())
}

func (i DeploymentEnvironmentVariableArgs) ToDeploymentEnvironmentVariableOutputWithContext(ctx context.Context) DeploymentEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentEnvironmentVariableOutput)
}

// DeploymentEnvironmentVariableArrayInput is an input type that accepts DeploymentEnvironmentVariableArray and DeploymentEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `DeploymentEnvironmentVariableArrayInput` via:
//
//	DeploymentEnvironmentVariableArray{ DeploymentEnvironmentVariableArgs{...} }
type DeploymentEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToDeploymentEnvironmentVariableArrayOutput() DeploymentEnvironmentVariableArrayOutput
	ToDeploymentEnvironmentVariableArrayOutputWithContext(context.Context) DeploymentEnvironmentVariableArrayOutput
}

type DeploymentEnvironmentVariableArray []DeploymentEnvironmentVariableInput

func (DeploymentEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentEnvironmentVariable)(nil)).Elem()
}

func (i DeploymentEnvironmentVariableArray) ToDeploymentEnvironmentVariableArrayOutput() DeploymentEnvironmentVariableArrayOutput {
	return i.ToDeploymentEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i DeploymentEnvironmentVariableArray) ToDeploymentEnvironmentVariableArrayOutputWithContext(ctx context.Context) DeploymentEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentEnvironmentVariableArrayOutput)
}

type DeploymentEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (DeploymentEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentEnvironmentVariable)(nil)).Elem()
}

func (o DeploymentEnvironmentVariableOutput) ToDeploymentEnvironmentVariableOutput() DeploymentEnvironmentVariableOutput {
	return o
}

func (o DeploymentEnvironmentVariableOutput) ToDeploymentEnvironmentVariableOutputWithContext(ctx context.Context) DeploymentEnvironmentVariableOutput {
	return o
}

// Whether the environment variable is a secret.
func (o DeploymentEnvironmentVariableOutput) GetIsSecret() pulumi.BoolOutput {
	return o.ApplyT(func(v DeploymentEnvironmentVariable) bool { return v.IsSecret }).(pulumi.BoolOutput)
}

// The environment variable key, used to call the value in code.
func (o DeploymentEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// The environment variable value.
func (o DeploymentEnvironmentVariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentEnvironmentVariable) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DeploymentEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (DeploymentEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentEnvironmentVariable)(nil)).Elem()
}

func (o DeploymentEnvironmentVariableArrayOutput) ToDeploymentEnvironmentVariableArrayOutput() DeploymentEnvironmentVariableArrayOutput {
	return o
}

func (o DeploymentEnvironmentVariableArrayOutput) ToDeploymentEnvironmentVariableArrayOutputWithContext(ctx context.Context) DeploymentEnvironmentVariableArrayOutput {
	return o
}

func (o DeploymentEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) DeploymentEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentEnvironmentVariable {
		return vs[0].([]DeploymentEnvironmentVariable)[vs[1].(int)]
	}).(DeploymentEnvironmentVariableOutput)
}

type DeploymentWorkerQueue struct {
	AstroMachine      string  `pulumi:"astroMachine"`
	Id                *string `pulumi:"id"`
	IsDefault         bool    `pulumi:"isDefault"`
	MaxWorkerCount    int     `pulumi:"maxWorkerCount"`
	MinWorkerCount    int     `pulumi:"minWorkerCount"`
	Name              string  `pulumi:"name"`
	WorkerConcurrency int     `pulumi:"workerConcurrency"`
}

// DeploymentWorkerQueueInput is an input type that accepts DeploymentWorkerQueueArgs and DeploymentWorkerQueueOutput values.
// You can construct a concrete instance of `DeploymentWorkerQueueInput` via:
//
//	DeploymentWorkerQueueArgs{...}
type DeploymentWorkerQueueInput interface {
	pulumi.Input

	ToDeploymentWorkerQueueOutput() DeploymentWorkerQueueOutput
	ToDeploymentWorkerQueueOutputWithContext(context.Context) DeploymentWorkerQueueOutput
}

type DeploymentWorkerQueueArgs struct {
	AstroMachine      pulumi.StringInput    `pulumi:"astroMachine"`
	Id                pulumi.StringPtrInput `pulumi:"id"`
	IsDefault         pulumi.BoolInput      `pulumi:"isDefault"`
	MaxWorkerCount    pulumi.IntInput       `pulumi:"maxWorkerCount"`
	MinWorkerCount    pulumi.IntInput       `pulumi:"minWorkerCount"`
	Name              pulumi.StringInput    `pulumi:"name"`
	WorkerConcurrency pulumi.IntInput       `pulumi:"workerConcurrency"`
}

func (DeploymentWorkerQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentWorkerQueue)(nil)).Elem()
}

func (i DeploymentWorkerQueueArgs) ToDeploymentWorkerQueueOutput() DeploymentWorkerQueueOutput {
	return i.ToDeploymentWorkerQueueOutputWithContext(context.Background())
}

func (i DeploymentWorkerQueueArgs) ToDeploymentWorkerQueueOutputWithContext(ctx context.Context) DeploymentWorkerQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentWorkerQueueOutput)
}

// DeploymentWorkerQueueArrayInput is an input type that accepts DeploymentWorkerQueueArray and DeploymentWorkerQueueArrayOutput values.
// You can construct a concrete instance of `DeploymentWorkerQueueArrayInput` via:
//
//	DeploymentWorkerQueueArray{ DeploymentWorkerQueueArgs{...} }
type DeploymentWorkerQueueArrayInput interface {
	pulumi.Input

	ToDeploymentWorkerQueueArrayOutput() DeploymentWorkerQueueArrayOutput
	ToDeploymentWorkerQueueArrayOutputWithContext(context.Context) DeploymentWorkerQueueArrayOutput
}

type DeploymentWorkerQueueArray []DeploymentWorkerQueueInput

func (DeploymentWorkerQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentWorkerQueue)(nil)).Elem()
}

func (i DeploymentWorkerQueueArray) ToDeploymentWorkerQueueArrayOutput() DeploymentWorkerQueueArrayOutput {
	return i.ToDeploymentWorkerQueueArrayOutputWithContext(context.Background())
}

func (i DeploymentWorkerQueueArray) ToDeploymentWorkerQueueArrayOutputWithContext(ctx context.Context) DeploymentWorkerQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentWorkerQueueArrayOutput)
}

type DeploymentWorkerQueueOutput struct{ *pulumi.OutputState }

func (DeploymentWorkerQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentWorkerQueue)(nil)).Elem()
}

func (o DeploymentWorkerQueueOutput) ToDeploymentWorkerQueueOutput() DeploymentWorkerQueueOutput {
	return o
}

func (o DeploymentWorkerQueueOutput) ToDeploymentWorkerQueueOutputWithContext(ctx context.Context) DeploymentWorkerQueueOutput {
	return o
}

func (o DeploymentWorkerQueueOutput) AstroMachine() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentWorkerQueue) string { return v.AstroMachine }).(pulumi.StringOutput)
}

func (o DeploymentWorkerQueueOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentWorkerQueue) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o DeploymentWorkerQueueOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v DeploymentWorkerQueue) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

func (o DeploymentWorkerQueueOutput) MaxWorkerCount() pulumi.IntOutput {
	return o.ApplyT(func(v DeploymentWorkerQueue) int { return v.MaxWorkerCount }).(pulumi.IntOutput)
}

func (o DeploymentWorkerQueueOutput) MinWorkerCount() pulumi.IntOutput {
	return o.ApplyT(func(v DeploymentWorkerQueue) int { return v.MinWorkerCount }).(pulumi.IntOutput)
}

func (o DeploymentWorkerQueueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentWorkerQueue) string { return v.Name }).(pulumi.StringOutput)
}

func (o DeploymentWorkerQueueOutput) WorkerConcurrency() pulumi.IntOutput {
	return o.ApplyT(func(v DeploymentWorkerQueue) int { return v.WorkerConcurrency }).(pulumi.IntOutput)
}

type DeploymentWorkerQueueArrayOutput struct{ *pulumi.OutputState }

func (DeploymentWorkerQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentWorkerQueue)(nil)).Elem()
}

func (o DeploymentWorkerQueueArrayOutput) ToDeploymentWorkerQueueArrayOutput() DeploymentWorkerQueueArrayOutput {
	return o
}

func (o DeploymentWorkerQueueArrayOutput) ToDeploymentWorkerQueueArrayOutputWithContext(ctx context.Context) DeploymentWorkerQueueArrayOutput {
	return o
}

func (o DeploymentWorkerQueueArrayOutput) Index(i pulumi.IntInput) DeploymentWorkerQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentWorkerQueue {
		return vs[0].([]DeploymentWorkerQueue)[vs[1].(int)]
	}).(DeploymentWorkerQueueOutput)
}

type GetClusterK8sTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

// GetClusterK8sTagInput is an input type that accepts GetClusterK8sTagArgs and GetClusterK8sTagOutput values.
// You can construct a concrete instance of `GetClusterK8sTagInput` via:
//
//	GetClusterK8sTagArgs{...}
type GetClusterK8sTagInput interface {
	pulumi.Input

	ToGetClusterK8sTagOutput() GetClusterK8sTagOutput
	ToGetClusterK8sTagOutputWithContext(context.Context) GetClusterK8sTagOutput
}

type GetClusterK8sTagArgs struct {
	// The tag's key.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag's value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClusterK8sTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterK8sTag)(nil)).Elem()
}

func (i GetClusterK8sTagArgs) ToGetClusterK8sTagOutput() GetClusterK8sTagOutput {
	return i.ToGetClusterK8sTagOutputWithContext(context.Background())
}

func (i GetClusterK8sTagArgs) ToGetClusterK8sTagOutputWithContext(ctx context.Context) GetClusterK8sTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterK8sTagOutput)
}

// GetClusterK8sTagArrayInput is an input type that accepts GetClusterK8sTagArray and GetClusterK8sTagArrayOutput values.
// You can construct a concrete instance of `GetClusterK8sTagArrayInput` via:
//
//	GetClusterK8sTagArray{ GetClusterK8sTagArgs{...} }
type GetClusterK8sTagArrayInput interface {
	pulumi.Input

	ToGetClusterK8sTagArrayOutput() GetClusterK8sTagArrayOutput
	ToGetClusterK8sTagArrayOutputWithContext(context.Context) GetClusterK8sTagArrayOutput
}

type GetClusterK8sTagArray []GetClusterK8sTagInput

func (GetClusterK8sTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterK8sTag)(nil)).Elem()
}

func (i GetClusterK8sTagArray) ToGetClusterK8sTagArrayOutput() GetClusterK8sTagArrayOutput {
	return i.ToGetClusterK8sTagArrayOutputWithContext(context.Background())
}

func (i GetClusterK8sTagArray) ToGetClusterK8sTagArrayOutputWithContext(ctx context.Context) GetClusterK8sTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterK8sTagArrayOutput)
}

type GetClusterK8sTagOutput struct{ *pulumi.OutputState }

func (GetClusterK8sTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterK8sTag)(nil)).Elem()
}

func (o GetClusterK8sTagOutput) ToGetClusterK8sTagOutput() GetClusterK8sTagOutput {
	return o
}

func (o GetClusterK8sTagOutput) ToGetClusterK8sTagOutputWithContext(ctx context.Context) GetClusterK8sTagOutput {
	return o
}

// The tag's key.
func (o GetClusterK8sTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterK8sTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag's value.
func (o GetClusterK8sTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterK8sTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetClusterK8sTagArrayOutput struct{ *pulumi.OutputState }

func (GetClusterK8sTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterK8sTag)(nil)).Elem()
}

func (o GetClusterK8sTagArrayOutput) ToGetClusterK8sTagArrayOutput() GetClusterK8sTagArrayOutput {
	return o
}

func (o GetClusterK8sTagArrayOutput) ToGetClusterK8sTagArrayOutputWithContext(ctx context.Context) GetClusterK8sTagArrayOutput {
	return o
}

func (o GetClusterK8sTagArrayOutput) Index(i pulumi.IntInput) GetClusterK8sTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterK8sTag {
		return vs[0].([]GetClusterK8sTag)[vs[1].(int)]
	}).(GetClusterK8sTagOutput)
}

type GetClusterMetadata struct {
	ExternalIps   []string `pulumi:"externalIps"`
	OidcIssuerUrl *string  `pulumi:"oidcIssuerUrl"`
}

// GetClusterMetadataInput is an input type that accepts GetClusterMetadataArgs and GetClusterMetadataOutput values.
// You can construct a concrete instance of `GetClusterMetadataInput` via:
//
//	GetClusterMetadataArgs{...}
type GetClusterMetadataInput interface {
	pulumi.Input

	ToGetClusterMetadataOutput() GetClusterMetadataOutput
	ToGetClusterMetadataOutputWithContext(context.Context) GetClusterMetadataOutput
}

type GetClusterMetadataArgs struct {
	ExternalIps   pulumi.StringArrayInput `pulumi:"externalIps"`
	OidcIssuerUrl pulumi.StringPtrInput   `pulumi:"oidcIssuerUrl"`
}

func (GetClusterMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMetadata)(nil)).Elem()
}

func (i GetClusterMetadataArgs) ToGetClusterMetadataOutput() GetClusterMetadataOutput {
	return i.ToGetClusterMetadataOutputWithContext(context.Background())
}

func (i GetClusterMetadataArgs) ToGetClusterMetadataOutputWithContext(ctx context.Context) GetClusterMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMetadataOutput)
}

type GetClusterMetadataOutput struct{ *pulumi.OutputState }

func (GetClusterMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMetadata)(nil)).Elem()
}

func (o GetClusterMetadataOutput) ToGetClusterMetadataOutput() GetClusterMetadataOutput {
	return o
}

func (o GetClusterMetadataOutput) ToGetClusterMetadataOutputWithContext(ctx context.Context) GetClusterMetadataOutput {
	return o
}

func (o GetClusterMetadataOutput) ExternalIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterMetadata) []string { return v.ExternalIps }).(pulumi.StringArrayOutput)
}

func (o GetClusterMetadataOutput) OidcIssuerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClusterMetadata) *string { return v.OidcIssuerUrl }).(pulumi.StringPtrOutput)
}

type GetClusterNodePool struct {
	// Whether the node pool is the default node pool of the cluster.
	IsDefault *bool `pulumi:"isDefault"`
	// The maximum number of nodes that can be created in the node pool.
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// The name of the node pool.
	Name string `pulumi:"name"`
	// The type of node instance that is used for the node pool.
	NodeInstanceType string `pulumi:"nodeInstanceType"`
}

// GetClusterNodePoolInput is an input type that accepts GetClusterNodePoolArgs and GetClusterNodePoolOutput values.
// You can construct a concrete instance of `GetClusterNodePoolInput` via:
//
//	GetClusterNodePoolArgs{...}
type GetClusterNodePoolInput interface {
	pulumi.Input

	ToGetClusterNodePoolOutput() GetClusterNodePoolOutput
	ToGetClusterNodePoolOutputWithContext(context.Context) GetClusterNodePoolOutput
}

type GetClusterNodePoolArgs struct {
	// Whether the node pool is the default node pool of the cluster.
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// The maximum number of nodes that can be created in the node pool.
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// The name of the node pool.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of node instance that is used for the node pool.
	NodeInstanceType pulumi.StringInput `pulumi:"nodeInstanceType"`
}

func (GetClusterNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePool)(nil)).Elem()
}

func (i GetClusterNodePoolArgs) ToGetClusterNodePoolOutput() GetClusterNodePoolOutput {
	return i.ToGetClusterNodePoolOutputWithContext(context.Background())
}

func (i GetClusterNodePoolArgs) ToGetClusterNodePoolOutputWithContext(ctx context.Context) GetClusterNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolOutput)
}

// GetClusterNodePoolArrayInput is an input type that accepts GetClusterNodePoolArray and GetClusterNodePoolArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolArrayInput` via:
//
//	GetClusterNodePoolArray{ GetClusterNodePoolArgs{...} }
type GetClusterNodePoolArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolArrayOutput() GetClusterNodePoolArrayOutput
	ToGetClusterNodePoolArrayOutputWithContext(context.Context) GetClusterNodePoolArrayOutput
}

type GetClusterNodePoolArray []GetClusterNodePoolInput

func (GetClusterNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePool)(nil)).Elem()
}

func (i GetClusterNodePoolArray) ToGetClusterNodePoolArrayOutput() GetClusterNodePoolArrayOutput {
	return i.ToGetClusterNodePoolArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolArray) ToGetClusterNodePoolArrayOutputWithContext(ctx context.Context) GetClusterNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolArrayOutput)
}

type GetClusterNodePoolOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePool)(nil)).Elem()
}

func (o GetClusterNodePoolOutput) ToGetClusterNodePoolOutput() GetClusterNodePoolOutput {
	return o
}

func (o GetClusterNodePoolOutput) ToGetClusterNodePoolOutputWithContext(ctx context.Context) GetClusterNodePoolOutput {
	return o
}

// Whether the node pool is the default node pool of the cluster.
func (o GetClusterNodePoolOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetClusterNodePool) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The maximum number of nodes that can be created in the node pool.
func (o GetClusterNodePoolOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePool) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// The name of the node pool.
func (o GetClusterNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePool) string { return v.Name }).(pulumi.StringOutput)
}

// The type of node instance that is used for the node pool.
func (o GetClusterNodePoolOutput) NodeInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePool) string { return v.NodeInstanceType }).(pulumi.StringOutput)
}

type GetClusterNodePoolArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePool)(nil)).Elem()
}

func (o GetClusterNodePoolArrayOutput) ToGetClusterNodePoolArrayOutput() GetClusterNodePoolArrayOutput {
	return o
}

func (o GetClusterNodePoolArrayOutput) ToGetClusterNodePoolArrayOutputWithContext(ctx context.Context) GetClusterNodePoolArrayOutput {
	return o
}

func (o GetClusterNodePoolArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePool {
		return vs[0].([]GetClusterNodePool)[vs[1].(int)]
	}).(GetClusterNodePoolOutput)
}

type GetOrganizationManagedDomain struct {
	CreatedAt      string   `pulumi:"createdAt"`
	EnforcedLogins []string `pulumi:"enforcedLogins"`
	Id             bool     `pulumi:"id"`
	Name           string   `pulumi:"name"`
	Status         string   `pulumi:"status"`
	UpdatedAt      string   `pulumi:"updatedAt"`
}

// GetOrganizationManagedDomainInput is an input type that accepts GetOrganizationManagedDomainArgs and GetOrganizationManagedDomainOutput values.
// You can construct a concrete instance of `GetOrganizationManagedDomainInput` via:
//
//	GetOrganizationManagedDomainArgs{...}
type GetOrganizationManagedDomainInput interface {
	pulumi.Input

	ToGetOrganizationManagedDomainOutput() GetOrganizationManagedDomainOutput
	ToGetOrganizationManagedDomainOutputWithContext(context.Context) GetOrganizationManagedDomainOutput
}

type GetOrganizationManagedDomainArgs struct {
	CreatedAt      pulumi.StringInput      `pulumi:"createdAt"`
	EnforcedLogins pulumi.StringArrayInput `pulumi:"enforcedLogins"`
	Id             pulumi.BoolInput        `pulumi:"id"`
	Name           pulumi.StringInput      `pulumi:"name"`
	Status         pulumi.StringInput      `pulumi:"status"`
	UpdatedAt      pulumi.StringInput      `pulumi:"updatedAt"`
}

func (GetOrganizationManagedDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationManagedDomain)(nil)).Elem()
}

func (i GetOrganizationManagedDomainArgs) ToGetOrganizationManagedDomainOutput() GetOrganizationManagedDomainOutput {
	return i.ToGetOrganizationManagedDomainOutputWithContext(context.Background())
}

func (i GetOrganizationManagedDomainArgs) ToGetOrganizationManagedDomainOutputWithContext(ctx context.Context) GetOrganizationManagedDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationManagedDomainOutput)
}

// GetOrganizationManagedDomainArrayInput is an input type that accepts GetOrganizationManagedDomainArray and GetOrganizationManagedDomainArrayOutput values.
// You can construct a concrete instance of `GetOrganizationManagedDomainArrayInput` via:
//
//	GetOrganizationManagedDomainArray{ GetOrganizationManagedDomainArgs{...} }
type GetOrganizationManagedDomainArrayInput interface {
	pulumi.Input

	ToGetOrganizationManagedDomainArrayOutput() GetOrganizationManagedDomainArrayOutput
	ToGetOrganizationManagedDomainArrayOutputWithContext(context.Context) GetOrganizationManagedDomainArrayOutput
}

type GetOrganizationManagedDomainArray []GetOrganizationManagedDomainInput

func (GetOrganizationManagedDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationManagedDomain)(nil)).Elem()
}

func (i GetOrganizationManagedDomainArray) ToGetOrganizationManagedDomainArrayOutput() GetOrganizationManagedDomainArrayOutput {
	return i.ToGetOrganizationManagedDomainArrayOutputWithContext(context.Background())
}

func (i GetOrganizationManagedDomainArray) ToGetOrganizationManagedDomainArrayOutputWithContext(ctx context.Context) GetOrganizationManagedDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationManagedDomainArrayOutput)
}

type GetOrganizationManagedDomainOutput struct{ *pulumi.OutputState }

func (GetOrganizationManagedDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationManagedDomain)(nil)).Elem()
}

func (o GetOrganizationManagedDomainOutput) ToGetOrganizationManagedDomainOutput() GetOrganizationManagedDomainOutput {
	return o
}

func (o GetOrganizationManagedDomainOutput) ToGetOrganizationManagedDomainOutputWithContext(ctx context.Context) GetOrganizationManagedDomainOutput {
	return o
}

func (o GetOrganizationManagedDomainOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationManagedDomain) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetOrganizationManagedDomainOutput) EnforcedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrganizationManagedDomain) []string { return v.EnforcedLogins }).(pulumi.StringArrayOutput)
}

func (o GetOrganizationManagedDomainOutput) Id() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationManagedDomain) bool { return v.Id }).(pulumi.BoolOutput)
}

func (o GetOrganizationManagedDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationManagedDomain) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetOrganizationManagedDomainOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationManagedDomain) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetOrganizationManagedDomainOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationManagedDomain) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetOrganizationManagedDomainArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationManagedDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationManagedDomain)(nil)).Elem()
}

func (o GetOrganizationManagedDomainArrayOutput) ToGetOrganizationManagedDomainArrayOutput() GetOrganizationManagedDomainArrayOutput {
	return o
}

func (o GetOrganizationManagedDomainArrayOutput) ToGetOrganizationManagedDomainArrayOutputWithContext(ctx context.Context) GetOrganizationManagedDomainArrayOutput {
	return o
}

func (o GetOrganizationManagedDomainArrayOutput) Index(i pulumi.IntInput) GetOrganizationManagedDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationManagedDomain {
		return vs[0].([]GetOrganizationManagedDomain)[vs[1].(int)]
	}).(GetOrganizationManagedDomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterK8sTagInput)(nil)).Elem(), ClusterK8sTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterK8sTagArrayInput)(nil)).Elem(), ClusterK8sTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMetadataInput)(nil)).Elem(), ClusterMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMetadataPtrInput)(nil)).Elem(), ClusterMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolInput)(nil)).Elem(), ClusterNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodePoolArrayInput)(nil)).Elem(), ClusterNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentEnvironmentVariableInput)(nil)).Elem(), DeploymentEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentEnvironmentVariableArrayInput)(nil)).Elem(), DeploymentEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentWorkerQueueInput)(nil)).Elem(), DeploymentWorkerQueueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentWorkerQueueArrayInput)(nil)).Elem(), DeploymentWorkerQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterK8sTagInput)(nil)).Elem(), GetClusterK8sTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterK8sTagArrayInput)(nil)).Elem(), GetClusterK8sTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMetadataInput)(nil)).Elem(), GetClusterMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolInput)(nil)).Elem(), GetClusterNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolArrayInput)(nil)).Elem(), GetClusterNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationManagedDomainInput)(nil)).Elem(), GetOrganizationManagedDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationManagedDomainArrayInput)(nil)).Elem(), GetOrganizationManagedDomainArray{})
	pulumi.RegisterOutputType(ClusterK8sTagOutput{})
	pulumi.RegisterOutputType(ClusterK8sTagArrayOutput{})
	pulumi.RegisterOutputType(ClusterMetadataOutput{})
	pulumi.RegisterOutputType(ClusterMetadataPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolArrayOutput{})
	pulumi.RegisterOutputType(DeploymentEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(DeploymentEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(DeploymentWorkerQueueOutput{})
	pulumi.RegisterOutputType(DeploymentWorkerQueueArrayOutput{})
	pulumi.RegisterOutputType(GetClusterK8sTagOutput{})
	pulumi.RegisterOutputType(GetClusterK8sTagArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMetadataOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationManagedDomainOutput{})
	pulumi.RegisterOutputType(GetOrganizationManagedDomainArrayOutput{})
}
