// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Deployment resource
 */
export class Deployment extends pulumi.CustomResource {
    /**
     * Get an existing Deployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeploymentState, opts?: pulumi.CustomResourceOptions): Deployment {
        return new Deployment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'astronomer:index/deployment:Deployment';

    /**
     * Returns true if the given object is an instance of Deployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Deployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Deployment.__pulumiType;
    }

    /**
     * Deployment Airflow version
     */
    public /*out*/ readonly airflowVersion!: pulumi.Output<string>;
    /**
     * Deployment's current Astro Runtime version
     */
    public /*out*/ readonly astroRuntimeVersion!: pulumi.Output<string>;
    /**
     * Deployment cloud provider - required for 'STANDARD' deployments. If changing this value, the deployment will be recreated in the new cloud provider
     */
    public readonly cloudProvider!: pulumi.Output<string>;
    /**
     * Deployment cluster identifier - required for 'HYBRID' and 'DEDICATED' deployments. If changing this value, the deployment will be recreated in the new cluster
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * Deployment contact emails
     */
    public readonly contactEmails!: pulumi.Output<string[]>;
    /**
     * Deployment creation timestamp
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Deployment creator
     */
    public /*out*/ readonly createdBy!: pulumi.Output<outputs.DeploymentCreatedBy>;
    /**
     * Deployment DAG tarball version
     */
    public /*out*/ readonly dagTarballVersion!: pulumi.Output<string>;
    /**
     * Deployment default task pod CPU - required for 'STANDARD' and 'DEDICATED' deployments
     */
    public readonly defaultTaskPodCpu!: pulumi.Output<string | undefined>;
    /**
     * Deployment default task pod memory - required for 'STANDARD' and 'DEDICATED' deployments
     */
    public readonly defaultTaskPodMemory!: pulumi.Output<string | undefined>;
    /**
     * Deployment description
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Deployment desired DAG tarball version
     */
    public /*out*/ readonly desiredDagTarballVersion!: pulumi.Output<string>;
    /**
     * Deployment environment variables
     */
    public readonly environmentVariables!: pulumi.Output<outputs.DeploymentEnvironmentVariable[]>;
    /**
     * Deployment executor
     */
    public readonly executor!: pulumi.Output<string>;
    /**
     * Deployment external IPs
     */
    public /*out*/ readonly externalIps!: pulumi.Output<string[]>;
    /**
     * Deployment image repository
     */
    public /*out*/ readonly imageRepository!: pulumi.Output<string>;
    /**
     * Deployment image tag
     */
    public /*out*/ readonly imageTag!: pulumi.Output<string>;
    /**
     * Deployment image version
     */
    public /*out*/ readonly imageVersion!: pulumi.Output<string>;
    /**
     * Deployment CI/CD enforced
     */
    public readonly isCicdEnforced!: pulumi.Output<boolean>;
    /**
     * Whether DAG deploy is enabled - Changing this value may disrupt your deployment. Read more at https://docs.astronomer.io/astro/deploy-dags#enable-or-disable-dag-only-deploys-on-a-deployment
     */
    public readonly isDagDeployEnabled!: pulumi.Output<boolean>;
    /**
     * Deployment development mode - required for 'STANDARD' and 'DEDICATED' deployments. If changing from 'False' to 'True', the deployment will be recreated
     */
    public readonly isDevelopmentMode!: pulumi.Output<boolean | undefined>;
    /**
     * Deployment high availability - required for 'STANDARD' and 'DEDICATED' deployments
     */
    public readonly isHighAvailability!: pulumi.Output<boolean | undefined>;
    /**
     * Deployment name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Deployment namespace
     */
    public /*out*/ readonly namespace!: pulumi.Output<string>;
    /**
     * Deployment OIDC issuer URL
     */
    public /*out*/ readonly oidcIssuerUrl!: pulumi.Output<string>;
    public readonly originalAstroRuntimeVersion!: pulumi.Output<string | undefined>;
    /**
     * Deployment region - required for 'STANDARD' deployments. If changing this value, the deployment will be recreated in the new region
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Deployment resource quota CPU - required for 'STANDARD' and 'DEDICATED' deployments
     */
    public readonly resourceQuotaCpu!: pulumi.Output<string | undefined>;
    /**
     * Deployment resource quota memory - required for 'STANDARD' and 'DEDICATED' deployments
     */
    public readonly resourceQuotaMemory!: pulumi.Output<string | undefined>;
    /**
     * Deployment scaling spec - only for 'STANDARD' and 'DEDICATED' deployments
     */
    public readonly scalingSpec!: pulumi.Output<outputs.DeploymentScalingSpec | undefined>;
    /**
     * Deployment scaling status
     */
    public /*out*/ readonly scalingStatus!: pulumi.Output<outputs.DeploymentScalingStatus>;
    /**
     * Deployment scheduler AU - required for 'HYBRID' deployments
     */
    public readonly schedulerAu!: pulumi.Output<number | undefined>;
    /**
     * Deployment scheduler CPU
     */
    public /*out*/ readonly schedulerCpu!: pulumi.Output<string>;
    /**
     * Deployment scheduler memory
     */
    public /*out*/ readonly schedulerMemory!: pulumi.Output<string>;
    /**
     * Deployment scheduler replicas - required for 'HYBRID' deployments
     */
    public readonly schedulerReplicas!: pulumi.Output<number>;
    /**
     * Deployment scheduler size - required for 'STANDARD' and 'DEDICATED' deployments
     */
    public readonly schedulerSize!: pulumi.Output<string | undefined>;
    /**
     * Deployment status
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Deployment status reason
     */
    public /*out*/ readonly statusReason!: pulumi.Output<string>;
    /**
     * Deployment task pod node pool identifier - required if executor is 'KUBERNETES' and type is 'HYBRID'
     */
    public readonly taskPodNodePoolId!: pulumi.Output<string | undefined>;
    /**
     * Deployment type - if changing this value, the deployment will be recreated with the new type
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Deployment last updated timestamp
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * Deployment updater
     */
    public /*out*/ readonly updatedBy!: pulumi.Output<outputs.DeploymentUpdatedBy>;
    /**
     * Deployment webserver Airflow API URL
     */
    public /*out*/ readonly webserverAirflowApiUrl!: pulumi.Output<string>;
    /**
     * Deployment webserver ingress hostname
     */
    public /*out*/ readonly webserverIngressHostname!: pulumi.Output<string>;
    /**
     * Deployment webserver URL
     */
    public /*out*/ readonly webserverUrl!: pulumi.Output<string>;
    /**
     * Deployment worker queues - required for deployments with 'CELERY' executor
     */
    public readonly workerQueues!: pulumi.Output<outputs.DeploymentWorkerQueue[] | undefined>;
    /**
     * Deployment workload identity. This value can be changed via the Astro API if applicable.
     */
    public /*out*/ readonly workloadIdentity!: pulumi.Output<string>;
    /**
     * Deployment workspace identifier - if changing this value, the deployment will be recreated in the new workspace
     */
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a Deployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeploymentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeploymentArgs | DeploymentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeploymentState | undefined;
            resourceInputs["airflowVersion"] = state ? state.airflowVersion : undefined;
            resourceInputs["astroRuntimeVersion"] = state ? state.astroRuntimeVersion : undefined;
            resourceInputs["cloudProvider"] = state ? state.cloudProvider : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["contactEmails"] = state ? state.contactEmails : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["dagTarballVersion"] = state ? state.dagTarballVersion : undefined;
            resourceInputs["defaultTaskPodCpu"] = state ? state.defaultTaskPodCpu : undefined;
            resourceInputs["defaultTaskPodMemory"] = state ? state.defaultTaskPodMemory : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["desiredDagTarballVersion"] = state ? state.desiredDagTarballVersion : undefined;
            resourceInputs["environmentVariables"] = state ? state.environmentVariables : undefined;
            resourceInputs["executor"] = state ? state.executor : undefined;
            resourceInputs["externalIps"] = state ? state.externalIps : undefined;
            resourceInputs["imageRepository"] = state ? state.imageRepository : undefined;
            resourceInputs["imageTag"] = state ? state.imageTag : undefined;
            resourceInputs["imageVersion"] = state ? state.imageVersion : undefined;
            resourceInputs["isCicdEnforced"] = state ? state.isCicdEnforced : undefined;
            resourceInputs["isDagDeployEnabled"] = state ? state.isDagDeployEnabled : undefined;
            resourceInputs["isDevelopmentMode"] = state ? state.isDevelopmentMode : undefined;
            resourceInputs["isHighAvailability"] = state ? state.isHighAvailability : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["oidcIssuerUrl"] = state ? state.oidcIssuerUrl : undefined;
            resourceInputs["originalAstroRuntimeVersion"] = state ? state.originalAstroRuntimeVersion : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["resourceQuotaCpu"] = state ? state.resourceQuotaCpu : undefined;
            resourceInputs["resourceQuotaMemory"] = state ? state.resourceQuotaMemory : undefined;
            resourceInputs["scalingSpec"] = state ? state.scalingSpec : undefined;
            resourceInputs["scalingStatus"] = state ? state.scalingStatus : undefined;
            resourceInputs["schedulerAu"] = state ? state.schedulerAu : undefined;
            resourceInputs["schedulerCpu"] = state ? state.schedulerCpu : undefined;
            resourceInputs["schedulerMemory"] = state ? state.schedulerMemory : undefined;
            resourceInputs["schedulerReplicas"] = state ? state.schedulerReplicas : undefined;
            resourceInputs["schedulerSize"] = state ? state.schedulerSize : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["statusReason"] = state ? state.statusReason : undefined;
            resourceInputs["taskPodNodePoolId"] = state ? state.taskPodNodePoolId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
            resourceInputs["webserverAirflowApiUrl"] = state ? state.webserverAirflowApiUrl : undefined;
            resourceInputs["webserverIngressHostname"] = state ? state.webserverIngressHostname : undefined;
            resourceInputs["webserverUrl"] = state ? state.webserverUrl : undefined;
            resourceInputs["workerQueues"] = state ? state.workerQueues : undefined;
            resourceInputs["workloadIdentity"] = state ? state.workloadIdentity : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as DeploymentArgs | undefined;
            if ((!args || args.contactEmails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contactEmails'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.environmentVariables === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentVariables'");
            }
            if ((!args || args.executor === undefined) && !opts.urn) {
                throw new Error("Missing required property 'executor'");
            }
            if ((!args || args.isCicdEnforced === undefined) && !opts.urn) {
                throw new Error("Missing required property 'isCicdEnforced'");
            }
            if ((!args || args.isDagDeployEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'isDagDeployEnabled'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["cloudProvider"] = args ? args.cloudProvider : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["contactEmails"] = args ? args.contactEmails : undefined;
            resourceInputs["defaultTaskPodCpu"] = args ? args.defaultTaskPodCpu : undefined;
            resourceInputs["defaultTaskPodMemory"] = args ? args.defaultTaskPodMemory : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environmentVariables"] = args ? args.environmentVariables : undefined;
            resourceInputs["executor"] = args ? args.executor : undefined;
            resourceInputs["isCicdEnforced"] = args ? args.isCicdEnforced : undefined;
            resourceInputs["isDagDeployEnabled"] = args ? args.isDagDeployEnabled : undefined;
            resourceInputs["isDevelopmentMode"] = args ? args.isDevelopmentMode : undefined;
            resourceInputs["isHighAvailability"] = args ? args.isHighAvailability : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["originalAstroRuntimeVersion"] = args ? args.originalAstroRuntimeVersion : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["resourceQuotaCpu"] = args ? args.resourceQuotaCpu : undefined;
            resourceInputs["resourceQuotaMemory"] = args ? args.resourceQuotaMemory : undefined;
            resourceInputs["scalingSpec"] = args ? args.scalingSpec : undefined;
            resourceInputs["schedulerAu"] = args ? args.schedulerAu : undefined;
            resourceInputs["schedulerReplicas"] = args ? args.schedulerReplicas : undefined;
            resourceInputs["schedulerSize"] = args ? args.schedulerSize : undefined;
            resourceInputs["taskPodNodePoolId"] = args ? args.taskPodNodePoolId : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["workerQueues"] = args ? args.workerQueues : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["airflowVersion"] = undefined /*out*/;
            resourceInputs["astroRuntimeVersion"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["dagTarballVersion"] = undefined /*out*/;
            resourceInputs["desiredDagTarballVersion"] = undefined /*out*/;
            resourceInputs["externalIps"] = undefined /*out*/;
            resourceInputs["imageRepository"] = undefined /*out*/;
            resourceInputs["imageTag"] = undefined /*out*/;
            resourceInputs["imageVersion"] = undefined /*out*/;
            resourceInputs["namespace"] = undefined /*out*/;
            resourceInputs["oidcIssuerUrl"] = undefined /*out*/;
            resourceInputs["scalingStatus"] = undefined /*out*/;
            resourceInputs["schedulerCpu"] = undefined /*out*/;
            resourceInputs["schedulerMemory"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusReason"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["updatedBy"] = undefined /*out*/;
            resourceInputs["webserverAirflowApiUrl"] = undefined /*out*/;
            resourceInputs["webserverIngressHostname"] = undefined /*out*/;
            resourceInputs["webserverUrl"] = undefined /*out*/;
            resourceInputs["workloadIdentity"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Deployment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Deployment resources.
 */
export interface DeploymentState {
    /**
     * Deployment Airflow version
     */
    airflowVersion?: pulumi.Input<string>;
    /**
     * Deployment's current Astro Runtime version
     */
    astroRuntimeVersion?: pulumi.Input<string>;
    /**
     * Deployment cloud provider - required for 'STANDARD' deployments. If changing this value, the deployment will be recreated in the new cloud provider
     */
    cloudProvider?: pulumi.Input<string>;
    /**
     * Deployment cluster identifier - required for 'HYBRID' and 'DEDICATED' deployments. If changing this value, the deployment will be recreated in the new cluster
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Deployment contact emails
     */
    contactEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Deployment creation timestamp
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Deployment creator
     */
    createdBy?: pulumi.Input<inputs.DeploymentCreatedBy>;
    /**
     * Deployment DAG tarball version
     */
    dagTarballVersion?: pulumi.Input<string>;
    /**
     * Deployment default task pod CPU - required for 'STANDARD' and 'DEDICATED' deployments
     */
    defaultTaskPodCpu?: pulumi.Input<string>;
    /**
     * Deployment default task pod memory - required for 'STANDARD' and 'DEDICATED' deployments
     */
    defaultTaskPodMemory?: pulumi.Input<string>;
    /**
     * Deployment description
     */
    description?: pulumi.Input<string>;
    /**
     * Deployment desired DAG tarball version
     */
    desiredDagTarballVersion?: pulumi.Input<string>;
    /**
     * Deployment environment variables
     */
    environmentVariables?: pulumi.Input<pulumi.Input<inputs.DeploymentEnvironmentVariable>[]>;
    /**
     * Deployment executor
     */
    executor?: pulumi.Input<string>;
    /**
     * Deployment external IPs
     */
    externalIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Deployment image repository
     */
    imageRepository?: pulumi.Input<string>;
    /**
     * Deployment image tag
     */
    imageTag?: pulumi.Input<string>;
    /**
     * Deployment image version
     */
    imageVersion?: pulumi.Input<string>;
    /**
     * Deployment CI/CD enforced
     */
    isCicdEnforced?: pulumi.Input<boolean>;
    /**
     * Whether DAG deploy is enabled - Changing this value may disrupt your deployment. Read more at https://docs.astronomer.io/astro/deploy-dags#enable-or-disable-dag-only-deploys-on-a-deployment
     */
    isDagDeployEnabled?: pulumi.Input<boolean>;
    /**
     * Deployment development mode - required for 'STANDARD' and 'DEDICATED' deployments. If changing from 'False' to 'True', the deployment will be recreated
     */
    isDevelopmentMode?: pulumi.Input<boolean>;
    /**
     * Deployment high availability - required for 'STANDARD' and 'DEDICATED' deployments
     */
    isHighAvailability?: pulumi.Input<boolean>;
    /**
     * Deployment name
     */
    name?: pulumi.Input<string>;
    /**
     * Deployment namespace
     */
    namespace?: pulumi.Input<string>;
    /**
     * Deployment OIDC issuer URL
     */
    oidcIssuerUrl?: pulumi.Input<string>;
    originalAstroRuntimeVersion?: pulumi.Input<string>;
    /**
     * Deployment region - required for 'STANDARD' deployments. If changing this value, the deployment will be recreated in the new region
     */
    region?: pulumi.Input<string>;
    /**
     * Deployment resource quota CPU - required for 'STANDARD' and 'DEDICATED' deployments
     */
    resourceQuotaCpu?: pulumi.Input<string>;
    /**
     * Deployment resource quota memory - required for 'STANDARD' and 'DEDICATED' deployments
     */
    resourceQuotaMemory?: pulumi.Input<string>;
    /**
     * Deployment scaling spec - only for 'STANDARD' and 'DEDICATED' deployments
     */
    scalingSpec?: pulumi.Input<inputs.DeploymentScalingSpec>;
    /**
     * Deployment scaling status
     */
    scalingStatus?: pulumi.Input<inputs.DeploymentScalingStatus>;
    /**
     * Deployment scheduler AU - required for 'HYBRID' deployments
     */
    schedulerAu?: pulumi.Input<number>;
    /**
     * Deployment scheduler CPU
     */
    schedulerCpu?: pulumi.Input<string>;
    /**
     * Deployment scheduler memory
     */
    schedulerMemory?: pulumi.Input<string>;
    /**
     * Deployment scheduler replicas - required for 'HYBRID' deployments
     */
    schedulerReplicas?: pulumi.Input<number>;
    /**
     * Deployment scheduler size - required for 'STANDARD' and 'DEDICATED' deployments
     */
    schedulerSize?: pulumi.Input<string>;
    /**
     * Deployment status
     */
    status?: pulumi.Input<string>;
    /**
     * Deployment status reason
     */
    statusReason?: pulumi.Input<string>;
    /**
     * Deployment task pod node pool identifier - required if executor is 'KUBERNETES' and type is 'HYBRID'
     */
    taskPodNodePoolId?: pulumi.Input<string>;
    /**
     * Deployment type - if changing this value, the deployment will be recreated with the new type
     */
    type?: pulumi.Input<string>;
    /**
     * Deployment last updated timestamp
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * Deployment updater
     */
    updatedBy?: pulumi.Input<inputs.DeploymentUpdatedBy>;
    /**
     * Deployment webserver Airflow API URL
     */
    webserverAirflowApiUrl?: pulumi.Input<string>;
    /**
     * Deployment webserver ingress hostname
     */
    webserverIngressHostname?: pulumi.Input<string>;
    /**
     * Deployment webserver URL
     */
    webserverUrl?: pulumi.Input<string>;
    /**
     * Deployment worker queues - required for deployments with 'CELERY' executor
     */
    workerQueues?: pulumi.Input<pulumi.Input<inputs.DeploymentWorkerQueue>[]>;
    /**
     * Deployment workload identity. This value can be changed via the Astro API if applicable.
     */
    workloadIdentity?: pulumi.Input<string>;
    /**
     * Deployment workspace identifier - if changing this value, the deployment will be recreated in the new workspace
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Deployment resource.
 */
export interface DeploymentArgs {
    /**
     * Deployment cloud provider - required for 'STANDARD' deployments. If changing this value, the deployment will be recreated in the new cloud provider
     */
    cloudProvider?: pulumi.Input<string>;
    /**
     * Deployment cluster identifier - required for 'HYBRID' and 'DEDICATED' deployments. If changing this value, the deployment will be recreated in the new cluster
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Deployment contact emails
     */
    contactEmails: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Deployment default task pod CPU - required for 'STANDARD' and 'DEDICATED' deployments
     */
    defaultTaskPodCpu?: pulumi.Input<string>;
    /**
     * Deployment default task pod memory - required for 'STANDARD' and 'DEDICATED' deployments
     */
    defaultTaskPodMemory?: pulumi.Input<string>;
    /**
     * Deployment description
     */
    description: pulumi.Input<string>;
    /**
     * Deployment environment variables
     */
    environmentVariables: pulumi.Input<pulumi.Input<inputs.DeploymentEnvironmentVariable>[]>;
    /**
     * Deployment executor
     */
    executor: pulumi.Input<string>;
    /**
     * Deployment CI/CD enforced
     */
    isCicdEnforced: pulumi.Input<boolean>;
    /**
     * Whether DAG deploy is enabled - Changing this value may disrupt your deployment. Read more at https://docs.astronomer.io/astro/deploy-dags#enable-or-disable-dag-only-deploys-on-a-deployment
     */
    isDagDeployEnabled: pulumi.Input<boolean>;
    /**
     * Deployment development mode - required for 'STANDARD' and 'DEDICATED' deployments. If changing from 'False' to 'True', the deployment will be recreated
     */
    isDevelopmentMode?: pulumi.Input<boolean>;
    /**
     * Deployment high availability - required for 'STANDARD' and 'DEDICATED' deployments
     */
    isHighAvailability?: pulumi.Input<boolean>;
    /**
     * Deployment name
     */
    name?: pulumi.Input<string>;
    originalAstroRuntimeVersion?: pulumi.Input<string>;
    /**
     * Deployment region - required for 'STANDARD' deployments. If changing this value, the deployment will be recreated in the new region
     */
    region?: pulumi.Input<string>;
    /**
     * Deployment resource quota CPU - required for 'STANDARD' and 'DEDICATED' deployments
     */
    resourceQuotaCpu?: pulumi.Input<string>;
    /**
     * Deployment resource quota memory - required for 'STANDARD' and 'DEDICATED' deployments
     */
    resourceQuotaMemory?: pulumi.Input<string>;
    /**
     * Deployment scaling spec - only for 'STANDARD' and 'DEDICATED' deployments
     */
    scalingSpec?: pulumi.Input<inputs.DeploymentScalingSpec>;
    /**
     * Deployment scheduler AU - required for 'HYBRID' deployments
     */
    schedulerAu?: pulumi.Input<number>;
    /**
     * Deployment scheduler replicas - required for 'HYBRID' deployments
     */
    schedulerReplicas?: pulumi.Input<number>;
    /**
     * Deployment scheduler size - required for 'STANDARD' and 'DEDICATED' deployments
     */
    schedulerSize?: pulumi.Input<string>;
    /**
     * Deployment task pod node pool identifier - required if executor is 'KUBERNETES' and type is 'HYBRID'
     */
    taskPodNodePoolId?: pulumi.Input<string>;
    /**
     * Deployment type - if changing this value, the deployment will be recreated with the new type
     */
    type: pulumi.Input<string>;
    /**
     * Deployment worker queues - required for deployments with 'CELERY' executor
     */
    workerQueues?: pulumi.Input<pulumi.Input<inputs.DeploymentWorkerQueue>[]>;
    /**
     * Deployment workspace identifier - if changing this value, the deployment will be recreated in the new workspace
     */
    workspaceId: pulumi.Input<string>;
}
