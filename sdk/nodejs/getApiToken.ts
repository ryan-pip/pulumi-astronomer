// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * API Token data source
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as astronomer from "@pulumi/astronomer";
 *
 * const exampleApiToken = astronomer.getApiToken({
 *     id: "clxm4836f00ql01me3nigmcr6",
 * });
 * export const apiToken = exampleApiToken;
 * ```
 */
export function getApiToken(args: GetApiTokenArgs, opts?: pulumi.InvokeOptions): Promise<GetApiTokenResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("astronomer:index/getApiToken:getApiToken", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getApiToken.
 */
export interface GetApiTokenArgs {
    /**
     * API Token identifier
     */
    id: string;
}

/**
 * A collection of values returned by getApiToken.
 */
export interface GetApiTokenResult {
    /**
     * API Token creation timestamp
     */
    readonly createdAt: string;
    /**
     * API Token creator
     */
    readonly createdBy: outputs.GetApiTokenCreatedBy;
    /**
     * API Token description
     */
    readonly description: string;
    /**
     * time when the API token will expire in UTC
     */
    readonly endAt: string;
    /**
     * API Token expiry period in days
     */
    readonly expiryPeriodInDays: number;
    /**
     * API Token identifier
     */
    readonly id: string;
    /**
     * API Token last used timestamp
     */
    readonly lastUsedAt: string;
    /**
     * API Token name
     */
    readonly name: string;
    /**
     * The roles assigned to the API Token
     */
    readonly roles: outputs.GetApiTokenRole[];
    /**
     * API Token short token
     */
    readonly shortToken: string;
    /**
     * time when the API token will become valid in UTC
     */
    readonly startAt: string;
    /**
     * API Token type
     */
    readonly type: string;
    /**
     * API Token last updated timestamp
     */
    readonly updatedAt: string;
    /**
     * API Token updater
     */
    readonly updatedBy: outputs.GetApiTokenUpdatedBy;
}
/**
 * API Token data source
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as astronomer from "@pulumi/astronomer";
 *
 * const exampleApiToken = astronomer.getApiToken({
 *     id: "clxm4836f00ql01me3nigmcr6",
 * });
 * export const apiToken = exampleApiToken;
 * ```
 */
export function getApiTokenOutput(args: GetApiTokenOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetApiTokenResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("astronomer:index/getApiToken:getApiToken", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getApiToken.
 */
export interface GetApiTokenOutputArgs {
    /**
     * API Token identifier
     */
    id: pulumi.Input<string>;
}
