// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Team data source
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as astronomer from "@pulumi/astronomer";
 *
 * const exampleTeam = astronomer.getTeam({
 *     id: "clwbclrc100bl01ozjj5s4jmq",
 * });
 * export const team = exampleTeam;
 * ```
 */
export function getTeam(args: GetTeamArgs, opts?: pulumi.InvokeOptions): Promise<GetTeamResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("astronomer:index/getTeam:getTeam", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getTeam.
 */
export interface GetTeamArgs {
    /**
     * Team ID
     */
    id: string;
}

/**
 * A collection of values returned by getTeam.
 */
export interface GetTeamResult {
    /**
     * Team creation timestamp
     */
    readonly createdAt: string;
    /**
     * Team creator
     */
    readonly createdBy: outputs.GetTeamCreatedBy;
    /**
     * The roles assigned to the Deployments
     */
    readonly deploymentRoles: outputs.GetTeamDeploymentRole[];
    /**
     * Team description
     */
    readonly description: string;
    /**
     * Team ID
     */
    readonly id: string;
    /**
     * Whether the Team is managed by an identity provider
     */
    readonly isIdpManaged: boolean;
    /**
     * Team name
     */
    readonly name: string;
    /**
     * The role assigned to the Organization
     */
    readonly organizationRole: string;
    /**
     * Number of roles assigned to the Team
     */
    readonly rolesCount: number;
    /**
     * Team last updated timestamp
     */
    readonly updatedAt: string;
    /**
     * Team updater
     */
    readonly updatedBy: outputs.GetTeamUpdatedBy;
    /**
     * The roles assigned to the Workspaces
     */
    readonly workspaceRoles: outputs.GetTeamWorkspaceRole[];
}
/**
 * Team data source
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as astronomer from "@pulumi/astronomer";
 *
 * const exampleTeam = astronomer.getTeam({
 *     id: "clwbclrc100bl01ozjj5s4jmq",
 * });
 * export const team = exampleTeam;
 * ```
 */
export function getTeamOutput(args: GetTeamOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTeamResult> {
    return pulumi.output(args).apply((a: any) => getTeam(a, opts))
}

/**
 * A collection of arguments for invoking getTeam.
 */
export interface GetTeamOutputArgs {
    /**
     * Team ID
     */
    id: pulumi.Input<string>;
}
