// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Teams data source
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as astronomer from "@pulumi/astronomer";
 *
 * const exampleTeamsTeams = astronomer.getTeams({});
 * const exampleTeamsFilterByNames = astronomer.getTeams({
 *     names: [
 *         "my first team",
 *         "my second team",
 *     ],
 * });
 * export const exampleTeams = exampleTeamsTeams;
 * ```
 */
export function getTeams(args?: GetTeamsArgs, opts?: pulumi.InvokeOptions): Promise<GetTeamsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("astronomer:index/getTeams:getTeams", {
        "names": args.names,
    }, opts);
}

/**
 * A collection of arguments for invoking getTeams.
 */
export interface GetTeamsArgs {
    names?: string[];
}

/**
 * A collection of values returned by getTeams.
 */
export interface GetTeamsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly names?: string[];
    readonly teams: outputs.GetTeamsTeam[];
}
/**
 * Teams data source
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as astronomer from "@pulumi/astronomer";
 *
 * const exampleTeamsTeams = astronomer.getTeams({});
 * const exampleTeamsFilterByNames = astronomer.getTeams({
 *     names: [
 *         "my first team",
 *         "my second team",
 *     ],
 * });
 * export const exampleTeams = exampleTeamsTeams;
 * ```
 */
export function getTeamsOutput(args?: GetTeamsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTeamsResult> {
    return pulumi.output(args).apply((a: any) => getTeams(a, opts))
}

/**
 * A collection of arguments for invoking getTeams.
 */
export interface GetTeamsOutputArgs {
    names?: pulumi.Input<pulumi.Input<string>[]>;
}
