// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Users data source
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as astronomer from "@pulumi/astronomer";
 *
 * const exampleUsersUsers = astronomer.getUsers({});
 * const exampleUsersFilterByWorkspaceId = astronomer.getUsers({
 *     workspaceId: "clx42sxw501gl01o0gjenthnh",
 * });
 * const exampleUsersFilterByDeploymentId = astronomer.getUsers({
 *     deploymentId: "clx44jyu001m201m5dzsbexqr",
 * });
 * export const exampleUsers = exampleUsersUsers;
 * ```
 */
export function getUsers(args?: GetUsersArgs, opts?: pulumi.InvokeOptions): Promise<GetUsersResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("astronomer:index/getUsers:getUsers", {
        "deploymentId": args.deploymentId,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersArgs {
    deploymentId?: string;
    workspaceId?: string;
}

/**
 * A collection of values returned by getUsers.
 */
export interface GetUsersResult {
    readonly deploymentId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly users: outputs.GetUsersUser[];
    readonly workspaceId?: string;
}
/**
 * Users data source
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as astronomer from "@pulumi/astronomer";
 *
 * const exampleUsersUsers = astronomer.getUsers({});
 * const exampleUsersFilterByWorkspaceId = astronomer.getUsers({
 *     workspaceId: "clx42sxw501gl01o0gjenthnh",
 * });
 * const exampleUsersFilterByDeploymentId = astronomer.getUsers({
 *     deploymentId: "clx44jyu001m201m5dzsbexqr",
 * });
 * export const exampleUsers = exampleUsersUsers;
 * ```
 */
export function getUsersOutput(args?: GetUsersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUsersResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("astronomer:index/getUsers:getUsers", {
        "deploymentId": args.deploymentId,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersOutputArgs {
    deploymentId?: pulumi.Input<string>;
    workspaceId?: pulumi.Input<string>;
}
