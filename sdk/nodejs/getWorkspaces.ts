// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Workspaces data source
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as astronomer from "@pulumi/astronomer";
 *
 * const exampleWorkspacesWorkspaces = astronomer.getWorkspaces({});
 * const exampleWorkspacesFilterByWorkspaceIds = astronomer.getWorkspaces({
 *     workspaceIds: [
 *         "clozc036j01to01jrlgvueo8t",
 *         "clozc036j01to01jrlgvueo81",
 *     ],
 * });
 * const exampleWorkspacesFilterByNames = astronomer.getWorkspaces({
 *     names: [
 *         "my first workspace",
 *         "my second workspace",
 *     ],
 * });
 * export const exampleWorkspaces = exampleWorkspacesWorkspaces;
 * ```
 */
export function getWorkspaces(args?: GetWorkspacesArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspacesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("astronomer:index/getWorkspaces:getWorkspaces", {
        "names": args.names,
        "workspaceIds": args.workspaceIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkspaces.
 */
export interface GetWorkspacesArgs {
    names?: string[];
    workspaceIds?: string[];
}

/**
 * A collection of values returned by getWorkspaces.
 */
export interface GetWorkspacesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly names?: string[];
    readonly workspaceIds?: string[];
    readonly workspaces: outputs.GetWorkspacesWorkspace[];
}
/**
 * Workspaces data source
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as astronomer from "@pulumi/astronomer";
 *
 * const exampleWorkspacesWorkspaces = astronomer.getWorkspaces({});
 * const exampleWorkspacesFilterByWorkspaceIds = astronomer.getWorkspaces({
 *     workspaceIds: [
 *         "clozc036j01to01jrlgvueo8t",
 *         "clozc036j01to01jrlgvueo81",
 *     ],
 * });
 * const exampleWorkspacesFilterByNames = astronomer.getWorkspaces({
 *     names: [
 *         "my first workspace",
 *         "my second workspace",
 *     ],
 * });
 * export const exampleWorkspaces = exampleWorkspacesWorkspaces;
 * ```
 */
export function getWorkspacesOutput(args?: GetWorkspacesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspacesResult> {
    return pulumi.output(args).apply((a: any) => getWorkspaces(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspaces.
 */
export interface GetWorkspacesOutputArgs {
    names?: pulumi.Input<pulumi.Input<string>[]>;
    workspaceIds?: pulumi.Input<pulumi.Input<string>[]>;
}
