# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetWorkspaceResult',
    'AwaitableGetWorkspaceResult',
    'get_workspace',
    'get_workspace_output',
]

@pulumi.output_type
class GetWorkspaceResult:
    """
    A collection of values returned by getWorkspace.
    """
    def __init__(__self__, cicd_enforced_default=None, description=None, id=None, name=None):
        if cicd_enforced_default and not isinstance(cicd_enforced_default, bool):
            raise TypeError("Expected argument 'cicd_enforced_default' to be a bool")
        pulumi.set(__self__, "cicd_enforced_default", cicd_enforced_default)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter(name="cicdEnforcedDefault")
    def cicd_enforced_default(self) -> bool:
        """
        Whether new Deployments enforce CI/CD deploys by default.
        """
        return pulumi.get(self, "cicd_enforced_default")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The Workspace's description
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The Workspace's identifier.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The Workspace's name
        """
        return pulumi.get(self, "name")


class AwaitableGetWorkspaceResult(GetWorkspaceResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWorkspaceResult(
            cicd_enforced_default=self.cicd_enforced_default,
            description=self.description,
            id=self.id,
            name=self.name)


def get_workspace(id: Optional[str] = None,
                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetWorkspaceResult:
    """
    Astronomer Workspace Resource

    ## Example Usage

    ```python
    import pulumi
    import pulumi_astronomer as astronomer

    imported_workspace = astronomer.get_workspace(id="cabcabcabcabcabcabcabcabcabc")
    ```


    :param str id: The Workspace's identifier.
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('astronomer:index/getWorkspace:getWorkspace', __args__, opts=opts, typ=GetWorkspaceResult).value

    return AwaitableGetWorkspaceResult(
        cicd_enforced_default=pulumi.get(__ret__, 'cicd_enforced_default'),
        description=pulumi.get(__ret__, 'description'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'))


@_utilities.lift_output_func(get_workspace)
def get_workspace_output(id: Optional[pulumi.Input[str]] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetWorkspaceResult]:
    """
    Astronomer Workspace Resource

    ## Example Usage

    ```python
    import pulumi
    import pulumi_astronomer as astronomer

    imported_workspace = astronomer.get_workspace(id="cabcabcabcabcabcabcabcabcabc")
    ```


    :param str id: The Workspace's identifier.
    """
    ...
